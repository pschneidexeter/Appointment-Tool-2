@if(BRT.RenderContext.IsDesign || BRT.RenderContext.IsSecureUrl) { // We see if the request coming from the Appointment Tool 2 layout is secure. If so, pass through, baby...

string action = Request.QueryString["action"]; // This is the helper they want. So they might pass in /at2ajax?action=getpeople. This would then call that helper.

int id = 0; // id does multipe duty. Could be a person's id or church or pending appointment. So based on the action, it's an id for that. For example /at2ajax?action=getperson&id=123
if(!String.IsNullOrEmpty(Request.QueryString["id"])){
    id = Int32.Parse(Request.QueryString["id"]);
}

int ms = 0; // Sorry for the short variable name but this is the MOVE STATUS. It's used to take the move status id for the changemovestatus() helper. We get the person's id and the id of the move status... ms
if(!String.IsNullOrEmpty(Request.QueryString["ms"])){
    ms = Int32.Parse(Request.QueryString["ms"]);
}

string view = Request.QueryString["view"]; // "view" in this context essentially means "which getpeople 'page'" do you want. It could be the "all people" page or the "including retired" or the "move status move", etc.
string movegrouping = Request.QueryString["movegrouping"]; // I don't think this does anything and may need to be removed
string churchstatus = Request.QueryString["churchstatus"]; // same here. This may actually do nothing.
string churchorperson = Request.QueryString["churchorperson"]; // some helpers do double duty... getmetrics(), getappts(), getsalary() and so you pass in an id BUT you tell is whether it's for churches or people
string formorpersonid = Request.QueryString["formorpersonid"]; // We call a data form to make a new projected appointment or edit one. This allows us to identify whether we're passing a person id or a pendingappointment id
string ajaxurl = Request.QueryString["ajaxurl"]; // this is for the "printing" We just get an encrypted string that is all the parameters in whatever we're trying to print. For example, when you call getperson() you pass stuff and getchurch() you get stuff. We encrypt the querystring from before and then decrypt.

    switch(action)  // This obviosly fires the helper in the action. The page is a whole bunch of helpers and some functions at the bottom
        {
            case "getpeople": // gets a list of people with a bunch of different page flavors.
                @getpeople(view);
                break;
            case "getperson": // gets a single person
                @getperson(id);
                break;
            case "churcheswithstatus": // our main churches list
                @churcheswithstatus();
                break;
            case "pendingsimple": // our projected appointments
                @pendingsimple();
                break;
            case "currentappointments": // current appointments
                @currentappointments();
                break;
            case "getchurch": // a single church
                @getchurch(id);
                break;
            case "getmetrics":  // spits out metrics but can be called for a person or a church
                @getMetrics(id,churchorperson);
                break;
            case "getappts": // gets a list of appointments but can be called for a person or church
                @getAppts(id,churchorperson);
                break;
            case "getaffecting": // gets a list of people coming into a church that then affect a person at that church
                @getaffecting(id);
                break;
            case "getsalary": // gets a compensation records list
                @getSalary(id,churchorperson);
                break;
            case "print": // print is a big wide page but it gets passed an encrypted string called ajaxurl.
                @print(ajaxurl);
                break;
            case "getmetricsperson": // this may actually trump the getmetrics() helper. Need to ask Barbara Gomes
                @getMetricsPerson(id);
                break;
            case "makemschanger": // The cabine can change the move status on the screen. This helper loads a selector of move statuses.
                @makemschanger(id);
                break;
            case "changemovestatus": // this changes the move status and then fires a function that shows the updated status. So a cabinet user can choose "appointment set" and it will save that to the DB
                @changemovestatus(id, ms);
                break;
            case "pendingdataform": // here we load a new or existing pending data form. If new the id would be a person. If existing, the id would be that of the pending appointment record.
                @pendingdataform(id,formorpersonid);
                break;
            case "deleteprojected": // if a user wants to delete a pending appointment, we do that. The id is that of the pending appointment record.
                @deleteprojected(id);
                break;
            case "getchurchfromgcfa": // this gets the graphs for a single church from GCFA's metrics. For example: https://gcfa-portal.brtsite.com/metrics-report?church=017580
                @getchurchfromgcfa(id);
                break;
            case "getappointmentchurchgraphs": // this will get many graphs for people based on their appointments. You pass in a person id and it gets their appointments and church graphs
                @getappointmentchurchgraphs(id);
                break;
            case "megapeople":
                @megapeople(view);
                break;
            case "bulk":
                @bulk();
                break;
        }
}
else {

<div>no access</div>

}


@helper getchurchfromgcfa(int? id){
    
    var adapter = EngineAdapter.Create("Contacts","AppointmentToolChurches");
    adapter.AddResultFields(new[] {"GCFANumber"}); // just get the GCFA # for giving to the GCFA report. We need the GCFA number to pass to their report page: https://gcfa-portal.brtsite.com/metrics-report?church=017580 This last part is a GCFA number
    adapter.AddCondition("<Eq FieldId=\"Id\" Value=\"" + id + "\"/>");
    EngineRecordList item =  adapter.GetList(1,1,true);
    if (item.Count > 0) {
        foreach (EngineRecord record in item) {
            if (record.HasField("GCFANumber") && !record.IsDBNull("GCFANumber")) { // okay so this patch of code is what's needed for this http://davidjbradshaw.github.io/iframe-resizer/. There is <script></script> code in the GCFA report and in Brick River. It determines the size of the page for iframing.
                <div class="graph">
                <script type="text/javascript">
        			//MDN PolyFil for IE8 (This is not needed if you use the jQuery version)
        			if (!Array.prototype.forEach){
        				Array.prototype.forEach = function(fun /*, thisArg */){
        				"use strict";
        				if (this === void 0 || this === null || typeof fun !== "function") throw new TypeError();
        				
        				var
        				t = Object(this),
        				len = t.length >>> 0,
        				thisArg = arguments.length >= 2 ? arguments[1] : void 0;
        
        				for (var i = 0; i < len; i++)
        				if (i in t)
        					fun.call(thisArg, t[i], i, t);
        				};
        			}
        		</script>
                
                <iframe scrolling="no" class="w-100 border" src="https://gcfa-portal.brtsite.com/metrics-report?iframed=yes&church=@record["GCFANumber"]"></iframe>
                
                <script type="text/javascript">
        			iFrameResize({
        				log                     : true,                  // Enable console logging
        				enablePublicMethods     : true,                  // Enable methods within iframe hosted page
        				resizedCallback         : function(messageData){ // Callback fn when resize is received
        					$('p#callback').html(
        						'<b>Frame ID:</b> '    + messageData.iframe.id +
        						' <b>Height:</b> '     + messageData.height +
        						' <b>Width:</b> '      + messageData.width + 
        						' <b>Event type:</b> ' + messageData.type
        					);
        				},
        				messageCallback         : function(messageData){ // Callback fn when message is received
        					$('p#callback').html(
        						'<b>Frame ID:</b> '    + messageData.iframe.id +
        						' <b>Message:</b> '    + messageData.message
        					);
        					alert(messageData.message);
        				},
        				closedCallback         : function(id){ // Callback fn when iFrame is closed
        					$('p#callback').html(
        						'<b>IFrame (</b>'    + id +
        						'<b>) removed from page.</b>'
        					);
        				}
        			});
        
        
        		</script>
        		</div>
            }
            break;
        }
    }
}

@helper getappointmentchurchgraphs(int id){

    // Now this puppy gets a bunch of graphs for a PERSON. We get their appoitments (all of them) and then call the getchurchfromgcfa(int? id) helper

    var adapter = EngineAdapter.Create("Content","Appointments");
    adapter.AddResultFields(new[] {"StartDate","EndDate","Church.Name"});
    adapter.AddCondition("<And><IsNull Not=\"true\" Scope=\"Both\" FieldId=\"Church.Id\"/><Eq Scope=\"Both\" FieldId=\"People.Id\" Value=\"" + id + "\"/></And>");
    //adapter.AddSortField("StartDate",false);
    EngineRecordList item =  adapter.GetList(1,50,true);
    if (item.Count > 0) {
        foreach (EngineRecord record in item) {
            if (!record.IsDBNull("Church")) {
                foreach (EngineRecord record_church in record.GetRecordList("Church")) {
                    
                    <h5 class="p-2 mt-4 border bg-light">
                        @if (!record_church.IsDBNull("Name")) {
                            <span>@record_church["Name"]</span>
                        }
                        <span>(
                            @if (record.HasField("StartDate") && !record.IsDBNull("StartDate")) {
                                <span>@record.GetDateTime("StartDate").ToString("M/d/yy")</span>
                            }
                            @if (record.HasField("EndDate") && !record.IsDBNull("EndDate")) {
                                <span> to @record.GetDateTime("EndDate").ToString("M/d/yy")</span>
                            }
                            )
                        </span>
                    </h5>
                    <div>@getchurchfromgcfa(record_church.Id)</div>
                }
            }
        }
    }
}

@helper deleteprojected(int id){
    // Give me an id of a projected appointment AppointmentToolPendingAppointments and I'll delete it for you and then spit back a message.
    
    EngineAdapter adapter = EngineAdapter.Create("Content","AppointmentToolPendingAppointments"); 
    EngineRecord deletingappt = adapter.GetRecord(id);
    bool idel = deletingappt.Delete();
    <div class="bg-primary bg-opacity-10 p-5 rounded text-center fw-bold">
        The projected appointment has been deleted.
    </div>
}




@helper pendingdataform(int id, string formorpersonid=""){
    // For NEW appointments, the id is a person id and we load a blank data form
    // For EXISTING appointments, we load that one. We get the data form from their websites view. There's a field called AppointmentTool2PendingForm and it has a pick of data forms. Every customer must have a data form.
    
    string themessage="Refresh the page to see the effect of a projected appointment.";
    if(formorpersonid=="person" || formorpersonid=="new"){ // it's new so give it a default person if possible
        <div class="text-center p-3 bg-warning text-white fs-5">@themessage</div>
        if(Site.HasField("AppointmentTool2PendingForm") && !Site.IsDBNull("AppointmentTool2PendingForm") || Site.GetRecordList("AppointmentTool2PendingForm").Count > 0){
            @BRT.Raw("<iframe style=\"height: 84vh;\" class=\"w-100\" src=\"" + BRT.DataLink((int)Site.GetRecordList("AppointmentTool2PendingForm")[0].Id) + "\"></iframe>")
        }        
    }
    else{ // the id here is of the pending appointment and so pull up that specific record
        <div class="text-center p-3 bg-warning text-white fs-5">@themessage
            <a 
            hx-get="@BRT.SecureUrl("/at2ajax?action=deleteprojected&id=" + id)" 
            hx-target="#snapbody" hx-indicator="#modalindicator" href="#" 
            class="btn btn-danger btn-sm ms-2" hx-confirm="Are you sure?">
                Delete this projected
            </a>
        </div>
        if(Site.HasField("AppointmentTool2PendingForm") && !Site.IsDBNull("AppointmentTool2PendingForm") || Site.GetRecordList("AppointmentTool2PendingForm").Count > 0){
            @BRT.Raw("<iframe style=\"height: 84vh;\" class=\"w-100\" src=\"" + BRT.DataLink((int)Site.GetRecordList("AppointmentTool2PendingForm")[0].Id, id) + "\"></iframe>")
        }
    }
    
    
}


@helper changemovestatus(int id, int ms){

    // We get passed id (which is a person id) and ms (which is a move status id) and we update the database
    // and then we have to do some duplicative stuff where we get this person's affecting appointments and projected appointments to set the status.
    // Affecting appointments are people with projected appointments coming into the church this person is currently appointed to.
    // Pending or "projected" appointments are places we (the cabinet) are sending them.
    
    string msLabel = "";
    bool hasPending = false; // used to pass to the function DisplayStage that is called from two places.
    bool isAffected = false; // also for displaying their stage
    
    EngineAdapter ad = EngineAdapter.Create("Contacts","AppointmentToolPeople"); 
    ad.AddResultField("MoveStatus");
    EngineRecord person = ad.GetRecord(id);
    person["MoveStatus"] = ms;
    person.Update();
    
    // now we need to get the pending appointments, affecting appointments, and move status to send that to the stage status and update on the page
    // There is some duplication here that I don't love. This could likely be done slightly better.
    
    var adapter = EngineAdapter.Create("Contacts","AppointmentToolPeople");
    adapter.AddResultFields(new[] {"FirstName","MoveStatus"}); // the basic fields
    string[] affectedFields = new string[] {"Appointments.StartDate","Appointments.EndDate","Appointments.Church.PendingAppointments.AppointmentStatus","Appointments.Church.PendingAppointments.AppointmentPosition","Appointments.Church.PendingAppointments.StartDate","Appointments.Church.PendingAppointments.People.FirstName","Appointments.Church.PendingAppointments.People.PreferredName","Appointments.Church.PendingAppointments.People.LastName"};
    string[] pendingFields = new string[] {"PendingAppointments","PendingAppointments.StartDate","PendingAppointments.AppointmentPosition","PendingAppointments.Church.Name","PendingAppointments.Church.MailCity","PendingAppointments.ExtensionMinistryPositions","PendingAppointments.ExtensionMinistry","PendingAppointments.ExtensionMinistryList"};
    
    adapter.AddResultFields(pendingFields);
    adapter.AddResultFields(affectedFields);
    adapter.AddCondition("<Eq FieldId=\"Id\" Value=\"" + id + "\"/>"); // setting to THIS person
    EngineRecordList item =  adapter.GetList(1,1,true);
    
    foreach(EngineRecord record in item){
        msLabel = record.GetFirstCategoryLabel("MoveStatus"); // set their move status label for passing to the function
        if (!record.IsDBNull("PendingAppointments")) { // do they have a pending appt?
            hasPending = true;
        }
        if (!record.IsDBNull("Appointments")) { // I don't love the duplication of the code here but I'm seeing if they are affected. Basically if their CURRENT church appointments have an incoming appointment, they are affected.
            foreach (EngineRecord record_appointments in record.GetRecordList("Appointments")) {
                if (!record_appointments.IsDBNull("Church") && (record_appointments.IsDBNull("StartDate") || record_appointments.GetDateTime("StartDate") < DateTime.Now) && (record_appointments.IsDBNull("EndDate") || record_appointments.GetDateTime("EndDate") >= DateTime.Now)) {
                    foreach (EngineRecord record_appointments_church in record_appointments.GetRecordList("Church")) {
                        if (!record_appointments_church.IsDBNull("PendingAppointments")) {
                            isAffected = true;
                        }
                    }
                }
            }
        }
    }
    @DisplayStage(hasPending, msLabel, isAffected, "#stage-" + id.ToString())

}

@helper print(string ajaxurl){ // This could be done better too. I load the scripts again that are on the Appointment Tool 2 layout. Ideally I could/should call the scripts in one place.
    
    
    <!doctype html>
    <html lang="en">
    <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <script src="https://unpkg.com/htmx.org@("@")1.6.1"></script>
    <script src="https://unpkg.com/hyperscript.org@("@")0.9.4"></script>
    <script src="https://brt-email.brtapp.com/files/central_assets/iframeresizer.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@("@")5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <style>
    a {
      pointer-events: none;
    }
    .btn{display:none;}
    </style>
    <title>print</title>
    </head>
    <body>
        <div class="text-center noprint"><a style="pointer-events: auto;" href="#" _="on click window.print()">print</a></div>
        <div class="p-4" hx-get="@BRT.SecureUrl("/at2ajax?" + Base64Decode(ajaxurl))" hx-trigger="load"></div>
    </body>
    </html>
}


@helper makemschanger(int personId){ // This simply display the blue dropdown picker. There is _hyperscript in here that does some stuff.
    @BRT.CategoryList(tableId:"Contacts", viewId:"AppointmentToolPeople", fieldId:"MoveStatus", template: 
    @<div id="ms-@personId" class="bg-primary position-absolute top-0 start-0 rounded p-2" _="on click elsewhere remove me" style="z-index:1000;width:250px;">
        @{
            string hs = " _=\"on click hide #ms-" + personId + " then go to #mstd-"  + personId +"\"" ;
            string hs2 = " _=\"on click put my.innerHTML into #currentstatus-" + personId + " then hide #ms-" + personId +"\"";
        }
        
        @foreach(EngineRecord c in item) {
            <div><a class="text-white text-decoration-none" href="#" hx-get="@BRT.SecureUrl("/at2ajax?action=changemovestatus&id=" + personId + "&ms=" + c["Id"])" hx-target="#ms-@personId" @BRT.Raw(hs2) >@c["Label"]</a></div>
        }
    </div>
    )
}


@helper getpeople(string view=""){ // The most important and largest helper in the system. It spits out a list of people but you can call different SavedFilters. All people, with retired, move by status, affected, resolved by status, resolved from affected

bool showstage = true; // This is on for all BUT it wasn't always that way and may change. It determines whether we show/query for affecting and pending appointments.
bool showaffector = true; // Similar here. Are we showing who's affecting them? It just builds a more complex query if yes.
bool isAffected = false; // we set this because we display for each person whether they are affected or not.

var adapter = EngineAdapter.Create("Contacts","AppointmentToolPeople");
adapter.AddResultFields(new[] {"FirstName","PreferredName","LastName","MoveStatus","ClergyStatus","DateOfBirth","DateStartedInConference","Gender","Ethnicity","KeyCometencies","PeopleRank","PotentialTier","TheologicalPreferences"}); // the basic fields

if(IsMultiConference()){ // This is kind of bullshit-y. It could be done better. It determines if the organization has more than one conference in it. Greater Northwest is the only at this point.
    adapter.AddResultFields(new[] {"ConferenceServing"});
}

string[] salaryBaseFields = new string[] {"Salary","Salary.PubDate","Salary.EndDate","Salary.CompensationTags"}; // Your basic fields everyone has and has to have.
string[] affectedFields = new string[] {"Appointments.StartDate","Appointments.EndDate","Appointments.Church.District","Appointments.Church.Name","Appointments.Church.MailCity","Appointments.Church.PendingAppointments.AppointmentStatus","Appointments.Church.PendingAppointments.AppointmentPosition","Appointments.Church.PendingAppointments.StartDate","Appointments.Church.PendingAppointments.People.FirstName","Appointments.Church.PendingAppointments.People.PreferredName","Appointments.Church.PendingAppointments.People.LastName"};


string[] pendingFields = new string[] {"PendingAppointments","PendingAppointments.StartDate","PendingAppointments.AppointmentPosition","PendingAppointments.Church.Name","PendingAppointments.Church.MailCity","PendingAppointments.ExtensionMinistryPositions","PendingAppointments.ExtensionMinistry","PendingAppointments.ExtensionMinistryList"};

switch(view) 
{
    case "allaffected": // I don't think we're using this one
        adapter.AddResultFields(salaryBaseFields);
        adapter.AddResultFields(SalaryTotalFieldsFullyQualified("people"));
        adapter.AddResultFields(pendingFields);
        adapter.AddResultFields(affectedFields);
        adapter.AddSavedFilter("MoveAll");
        break;
    case "needsmove": // anyone with a move status that means we need to move them BUT that hasn't been moved.
        adapter.AddResultFields(salaryBaseFields);
        adapter.AddResultFields(SalaryTotalFieldsFullyQualified("people"));
        adapter.AddResultFields(pendingFields);
        adapter.AddResultFields(affectedFields);
        adapter.AddSavedFilter("MoveNeedsMove");
        break;
    case "resolved": // people that were set to a move status that means they need to move and we moved them.
        adapter.AddResultFields(salaryBaseFields);
        adapter.AddResultFields(SalaryTotalFieldsFullyQualified("people"));
        adapter.AddResultFields(pendingFields);
        adapter.AddResultFields(affectedFields);
        adapter.AddSavedFilter("MoveBeenMoved");
        break;
    case "affectedunresolved": // people that have someone coming into their church but have yet to be moved.
        adapter.AddResultFields(salaryBaseFields);
        adapter.AddResultFields(SalaryTotalFieldsFullyQualified("people"));
        adapter.AddResultFields(pendingFields);
        adapter.AddResultFields(affectedFields);
        adapter.AddSavedFilter("UnresolvedAffected");
        break;
    case "affectedresolved": // got affected but now have either been moved or have a move status like "remain" or "appointment set" that mean, "they are all set'
        adapter.AddResultFields(salaryBaseFields);
        adapter.AddResultFields(SalaryTotalFieldsFullyQualified("people"));
        adapter.AddResultFields(pendingFields);
        adapter.AddResultFields(affectedFields);
        adapter.AddSavedFilter("ResolvedAffected");
        break;
    case "all": // thie INCLUDES retired people. It will be the longest list.
        adapter.AddResultFields(salaryBaseFields);
        adapter.AddResultFields(SalaryTotalFieldsFullyQualified("people"));
        adapter.AddResultFields(pendingFields);
        adapter.AddResultFields(affectedFields);
        adapter.AddSavedFilter("AllPeople");
        break;
    case "noretired": // This is the MAIN people list
        adapter.AddResultFields(salaryBaseFields);
        adapter.AddResultFields(SalaryTotalFieldsFullyQualified("people"));
        adapter.AddResultFields(pendingFields);
        adapter.AddResultFields(affectedFields);
        adapter.AddSavedFilter("AllPeopleNoRetired");
        break;
}

EngineRecordList item =  adapter.GetList(1,5000,true);

<div class="text-center mt-1">
    <a hx-get="@BRT.SecureUrl("/at2ajax?" + Request.Url.ToString().Split('?')[1])" 
    hx-target="#renderdiv" hx-indicator="#indicator" href="#" 
    class="btn btn btn-outline-secondary btn-sm">
        <i class="bi bi-arrow-clockwise"></i> Refresh
    </a>
    @item.Count.ToString("N0") people

<script type="text/hyperscript">
  def inrange(val, min, max)
     if val >= min and val <= max
       return true
     end
     return false
  end
</script>
@{
// above we have a _hyperscript function to handle salary min/max ranges.
// below we've got duplication. It could be better but we have to build a raw string because frickin' Razore removes whitespace if I put the @whatever right in it.

string range1 = "on click for e in <tr span[at-salary]/> in <table/> if inrange(e's @at-salary, 1, 50000) then show e.closest('tr') else hide e.closest('tr') end end";
string range2 = "on click for e in <tr span[at-salary]/> in <table/> if inrange(e's @at-salary, 50001, 100000) then show e.closest('tr') else hide e.closest('tr') end end";
string range3 = "on click for e in <tr span[at-salary]/> in <table/> if inrange(e's @at-salary, 100001, 150000) then show e.closest('tr') else hide e.closest('tr') end end";
string range4 = "on click for e in <tr span[at-salary]/> in <table/> if inrange(e's @at-salary, 150001, 900000) then show e.closest('tr') else hide e.closest('tr') end end";
}
<div class="dropdown d-inline-block ms-2">
  <button class="btn btn btn-outline-secondary dropdown-toggle btn-sm" type="button" id="salarydrop" data-bs-toggle="dropdown" aria-expanded="false">
    Salary range
  </button>
  <ul class="dropdown-menu" aria-labelledby="salarydrop">
    <li><a class="dropdown-item" href="#" _="on click show <tr/>">All ranges</a></li>
    <li><a class="dropdown-item" href="#" _="@range1">< $50K</a></li>
    <li><a class="dropdown-item" href="#" _="@range2">$50-100K</a></li>
    <li><a class="dropdown-item" href="#"  _="@range3">$100-$150K</a></li>
    <li><a class="dropdown-item" href="#"  _="@range4">>$150K</a></li>
  </ul>
</div>

</div>


if(item.Count>0){ // we load jQuery datatable to handle soring and some hack-ass filtering that could be better.
    
    <script>
    
    
    $(document).ready(function () {
    // Setup - add a text input to each footer cell
    $('#datatable thead tr')
        .clone(true)
        .addClass('filters')
        .appendTo('#datatable thead');
 
    var table = $('#datatable').DataTable({
        "paging":         false,
            "info": false,
            fixedHeader: true,
            "order": [[ 9, "desc" ]],
            dom: 'Bfrtip',
            buttons: [
                'csv', 'excel', 'print'
            ],
        orderCellsTop: true,
        fixedHeader: true,
        initComplete: function () {
            var api = this.api();
 
            // For each column. This is code I copied from the DataTables site. It copies the the header row and puts in input boxes for filtering.
            api
                .columns()
                .eq(0)
                .each(function (colIdx) {
                    // Set the header cell to contain the input element
                    var cell = $('.filters th').eq(
                        $(api.column(colIdx).header()).index()
                    );
                    var title = $(cell).text();
                    $(cell).html('<input class="fcol" type="text" placeholder="' + title + '"  />');
 
                    // On every keypress in this input
                    $(
                        'input',
                        $('.filters th').eq($(api.column(colIdx).header()).index())
                    )
                        .off('keyup change')
                        .on('keyup change', function (e) {
                            e.stopPropagation();
 
                            // Get the search value
                            $(this).attr('title', $(this).val());
                            var regexr = '({search})'; //$(this).parents('th').find('select').val();
 
                            var cursorPosition = this.selectionStart;
                            // Search the column for that value
                            api
                                .column(colIdx)
                                .search(
                                    this.value != ''
                                        ? regexr.replace('{search}', '(((' + this.value + ')))')
                                        : '',
                                    this.value != '',
                                    this.value == ''
                                )
                                .draw();
 
                            $(this)
                                .focus()[0]
                                .setSelectionRange(cursorPosition, cursorPosition);
                        });
                });
        },
    });
});
    
    
    </script>
    
    <table class="cell-border mt-3" id="datatable">
        <thead>
            <tr>
            <th>Name</th>
            <th>Mv sts</th>
            <th>Movement</th>
            <th>Stage</th>
            <th>Rel</th>
            <th>Age</th>
            <th>Gdr</th>
            <th>Eth</th>
            <th>YUA</th>
            <th>Tot sal</th>
            <th>Hou</th>
            <th>Dist</th>
            @if(IsMultiConference()){
                <th>Conf</th>
            }
            <th>Comps</th>
            <th>Perf</th>
            <th>Theo</th>
            
            
            </tr>
        </thead>
<tbody>

  @foreach(EngineRecord record in item) {
  isAffected=false; // We want to know if they are affected because for each row/person, we call the DisplayStage() helper and this needs to know if they are affected and have a pending appointment
    <tr class="personrow">
      <td class="position-relative" data-sort="@if(!record.IsDBNull("LastName")){@record["LastName"]}@if(!record.IsDBNull("FirstName")) {@record["FirstName"]}">
          <div class="text-nowrap">
              
            <a data-bs-toggle="offcanvas" data-bs-target="#snapshotmodal" 
                href="#"
                hx-get="@BRT.SecureUrl("/at2ajax?action=getperson&id=" + record.Id)" 
                hx-target="#snapbody" class="text-dark"  hx-indicator="#modalindicator"
            >
            @if(!record.IsDBNull("PreferredName")) {
              <span> @record["PreferredName"]</span>
            }
            else if(!record.IsDBNull("FirstName")) {
              <span>@record["FirstName"]</span>
            }
            @if(!record.IsDBNull("LastName")) {
               <span> @record["LastName"]</span>
            }
            
            </div>
        
        </td>
        <td class="position-relative" id="mstd-@record.Id">
        @if(!record.IsDBNull("MoveStatus")) {
            <small>
            <a href="#" hx-get="@BRT.SecureUrl("/at2ajax?action=makemschanger&id=" + record.Id)" hx-swap="afterend" class="text-dark" id="currentstatus-@record.Id">
                @record.GetFirstCategoryLabel("MoveStatus")
            </a>
            </small>
        }
        else {
            <small>
            <a href="#" hx-get="@BRT.SecureUrl("/at2ajax?action=makemschanger&id=" + record.Id)" hx-swap="afterend" class="text-dark" id="currentstatus-@record.Id">
                <span class="text-muted">set</span>
            </a></small>
        }
        </td>
        
        <td>
            <small class="text-muted">
                @if (!record.IsDBNull("Appointments")) {
                            foreach (EngineRecord record_appointments in record.GetRecordList("Appointments")) {
                                @* Church (appt tool) *@
                                // we are seeing if these are their CURRENT appoinments. I should probably pull this intoa functionm that centralizes this.
                                if (!record_appointments.IsDBNull("Church") && (record_appointments.IsDBNull("StartDate") || record_appointments.GetDateTime("StartDate") < DateTime.Now) && (record_appointments.IsDBNull("EndDate") || record_appointments.GetDateTime("EndDate") >= DateTime.Now)) {
                                    
                                    <span>
                                        @foreach (EngineRecord record_appointments_church in record_appointments.GetRecordList("Church")) {
                                            <span>
                                                @* Incoming Projected Appointments *@
                                                @if (!record_appointments_church.IsDBNull("PendingAppointments")) {
                                                    isAffected = true; // if they have an incoming projected appointment they are affected. Are they "resolved"? We don't know that yet. That's what pending appointments and this DisplayStage() helper do.
                                                    <span>
                                                        @foreach (EngineRecord record_appointments_church_pendingappointments in record_appointments_church.GetRecordList("PendingAppointments")) {
                                                            <div class="bg-warning bg-opacity-10 p-1"><span >
                                                                
                                                                    
                                                                    <a data-bs-toggle="offcanvas" data-bs-target="#snapshotmodal" 
                                                                    hx-get="@BRT.SecureUrl("/at2ajax?action=pendingdataform&formorpersonid=form&id=" + record_appointments_church_pendingappointments.Id)" 
                                                                    hx-target="#snapbody" hx-indicator="#modalindicator" href="#" 
                                                                    class="text-muted editlink">
                                                                    
                                                                    <i class="bi bi-pencil-square"></i> Affected by:
                                                                </a>
                                                                
                                                                
                                                                @* Appointment Position *@
                                                                @if (!record_appointments_church_pendingappointments.IsDBNull("AppointmentPosition")) {
                                                                    <span>
                                                                        @foreach (CategoryFieldItem cat in record_appointments_church_pendingappointments.GetCategory("AppointmentPosition")) {
                                                                            <span>
                                                                                @cat.Label
                                                                            </span>
                                                                        }
                                                                    </span>
                                                                }
                                                                @*
                                                                // start date
                                                                @if (!record_appointments_church_pendingappointments.IsDBNull("StartDate")) {
                                                                    <span>
                                                                        @record_appointments_church_pendingappointments.GetDateTime("StartDate").ToString(("M/d/y"))
                                                                    </span>
                                                                }
                                                                *@

                                                                @* People *@
                                                                @if (!record_appointments_church_pendingappointments.IsDBNull("People")) {
                                                                    <span>
                                                                        @foreach (EngineRecord record_appointments_church_pendingappointments_people in record_appointments_church_pendingappointments.GetRecordList("People")) {
                                                                             <a data-bs-toggle="offcanvas" data-bs-target="#snapshotmodal" 
                                                                            href="#"
                                                                            hx-get="@BRT.SecureUrl("/at2ajax?action=getperson&id=" + record_appointments_church_pendingappointments_people.Id)" 
                                                                            hx-target="#snapbody" class="text-muted"  hx-indicator="#modalindicator"
                                                                            >
                                                                                
                                                                                @if (!record_appointments_church_pendingappointments_people.IsDBNull("PreferredName")) {
                                                                                    <span>
                                                                                        @record_appointments_church_pendingappointments_people["PreferredName"]
                                                                                    </span>
                                                                                }
                                                                                else if (!record_appointments_church_pendingappointments_people.IsDBNull("FirstName")) {
                                                                                    <span>
                                                                                        @record_appointments_church_pendingappointments_people["FirstName"]
                                                                                    </span>
                                                                                }

                                                                                @* Last Name *@
                                                                                @if (!record_appointments_church_pendingappointments_people.IsDBNull("LastName")) {
                                                                                    <span>
                                                                                        @record_appointments_church_pendingappointments_people["LastName"]
                                                                                    </span>
                                                                                }
                                                                            </a>
                                                                    }
                                                                    </span>
                                                                }
                                                            </span></div>
                                                    }
                                                    </span>
                                                }
                                            </span>
                                    }
                                    </span>
                                }
                            }
                        }
                </small>
        
            @if (!record.IsDBNull("PendingAppointments")) {
                foreach(EngineRecord appointment in record.GetRecordList("PendingAppointments")) {
                    <div class="bg-success bg-opacity-10 p-1"><span >
                        <small class="text-muted">
                            
                            
                            <a data-bs-toggle="offcanvas" data-bs-target="#snapshotmodal" 
                            hx-get="@BRT.SecureUrl("/at2ajax?action=pendingdataform&formorpersonid=form&id=" + appointment.Id)" 
                            hx-target="#snapbody" hx-indicator="#modalindicator" href="#" 
                            class="text-muted editlink">
                            
                            <i class="bi bi-pencil-square"></i> moving</a>
                            to </small>
                        
                    
                     @if (!appointment.IsDBNull("Church")) {
                            <div><small class="text-muted"> 
                                @foreach (EngineRecord record_appointments_church in appointment.GetRecordList("Church")) {
                                    <a data-bs-toggle="offcanvas" data-bs-target="#snapshotmodal" href="#"
                                    hx-get="@BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record_appointments_church.Id)" hx-target="#snapbody" class="text-muted" hx-indicator="#modalindicator">
                                        
                                        @if (!record_appointments_church.IsDBNull("Name")) {
                                            <div>
                                                <span>@record_appointments_church["Name"]</span>
                                                @if (!record_appointments_church.IsDBNull("MailCity")) {
                                                    <span>
                                                         - @record_appointments_church["MailCity"]
                                                    </span>
                                                }
                                                
                                            </div>
                                        }
    
                                        
                                        
                                    </a>
                            }
                            </small></div>
                        }
                   
                        @if (!appointment.IsDBNull("ExtensionMinistryPositions")) {
                            <div><small class="text-muted">
                                @foreach (CategoryFieldItem cat in appointment.GetCategory("ExtensionMinistryPositions")) {
                                    <span title="@cat.Label">
                                        @cat.Label.ToString().Summarize(30)
                                    </span>
                                }
                            </small></div>
                        }
                      
                        @if (!appointment.IsDBNull("ExtensionMinistry")) {
                            
                            <div><small class="text-muted" title="@appointment.GetString("ExtensionMinistry")">
                                @appointment.GetString("ExtensionMinistry").Summarize(30)
                            </small></div>
                        }
    
                        
                        @if (!appointment.IsDBNull("ExtensionMinistryList")) {
                            <div><small class="text-muted">
                                extension ministry
                            </small></div>
                        }
                       
                        
                        
                    </span></div>
                }
            }
        </td>
        <td id="stage-@record.Id">
            @{
            // This is important. And it could probably be done even more cleanly but it goes like this...
            // if they have a pending appoinment AND have a move status, pass that in to the stage-determining function
            // Or they have no move status and pass that is. But it's a good thing to have a pending appoinment cause they're likely done with this person.
            // If they do not have a pending appointment then we do a similar thing with move status.
            }
            @if (!record.IsDBNull("PendingAppointments")) {
                if (!record.IsDBNull("MoveStatus")){
                    @DisplayStage(true, record.GetFirstCategoryLabel("MoveStatus"), isAffected)
                }
                else{
                    @DisplayStage(true, "", isAffected)
                }
            }
            else {
                if(!record.IsDBNull("MoveStatus")){
                    @DisplayStage(false,record.GetFirstCategoryLabel("MoveStatus"),isAffected)   
                }
                else {
                    @DisplayStage(false,"",isAffected)
                }
            }
        </td>
        <td>
        @if(!record.IsDBNull("ClergyStatus")) {
          <span at-clergystatus="@record.GetFirstCategoryAbbrev("ClergyStatus")">@record.GetFirstCategoryAbbrev("ClergyStatus")</span>
        }
        </td>
        <td>
        @if(!record.IsDBNull("DateOfBirth")) {
           <div at-age="@Math.Floor((DateTime.Now - record.GetDateTime("DateOfBirth")).TotalDays / 365)">@Math.Floor((DateTime.Now - record.GetDateTime("DateOfBirth")).TotalDays / 365)</div>
        }
        </td>
        <td>
        @if(!record.IsDBNull("Gender")) {
          <span at-gender="@record.GetFirstCategoryAbbrev("Gender")">@record.GetFirstCategoryAbbrev("Gender")</span>
        }
        </td>
        <td>
        @if(!record.IsDBNull("Ethnicity")) {
          <span at-ethnicity="@record.GetFirstCategoryLabel("Ethnicity")">@record.GetFirstCategoryLabel("Ethnicity")</span>
        }
        </td>
        <td>
        @if(!record.IsDBNull("DateStartedInConference")) {
           <div>@Math.Floor((DateTime.Now - record.GetDateTime("DateStartedInConference")).TotalDays / 365)</div>
        }
        </td>
        <td class="bg-success bg-opacity-10 salary-field total-salary">
            @if(!record.IsDBNull("Salary")) { // This GetTotalSalary() function gets passed a record list of salary records and it can come from peopel or churches
                @BRT.Raw(GetTotalSalary(record.GetRecordList("Salary")))
            }
            else
            {
                <span at-salary="0">$0</span>
            }
        </td>
        <td class="bg-success bg-opacity-10 salary-field">
            @{
                string CompensationTags="";
                if(!record.IsDBNull("Salary")) {
                    foreach(EngineRecord record_salary in record.GetRecordList("Salary")) {
                        if (record_salary.HasField("CompensationTags") && !record_salary.IsDBNull("CompensationTags")) {
                            foreach (CategoryFieldItem cat in record_salary.GetCategory("CompensationTags")) {
                                if(cat.Label=="Has Parsonage"){
                                    CompensationTags="P";
                                }
                                else if (cat.Label=="Housing Allowance"){
                                    CompensationTags="HA";
                                }
                                else{
                                    CompensationTags=cat.Label;
                                }
                            }
                        }
                    }
                }
            }
            @CompensationTags
        </td>
        <td>
            @if (!record.IsDBNull("Appointments")) {
                string onedist="";
                foreach (EngineRecord record_appointments in record.GetRecordList("Appointments")) {
                    if (!record_appointments.IsDBNull("Church") && (record_appointments.IsDBNull("StartDate") || record_appointments.GetDateTime("StartDate") < DateTime.Now) && (record_appointments.IsDBNull("EndDate") || record_appointments.GetDateTime("EndDate") >= DateTime.Now)) {
                        
                        foreach (EngineRecord record_appointments_church in record_appointments.GetRecordList("Church")) {
                            if (!record_appointments_church.IsDBNull("District")) {
                               foreach (EngineRecord district in record_appointments_church.GetRecordList("District")) { 
                                    onedist = district.GetString("Name");
                               }
                            }
                        }
                    }
                }
                @onedist
            }
        </td>
        
        @if(IsMultiConference()){
            <td>
                @if(record.HasField("ConferenceServing") && !record.IsDBNull("ConferenceServing")) {
                  <span>@record.GetFirstCategoryLabel("ConferenceServing")</span>
                }
            </td>
        }
        
        
        <td>
            @if (!record.IsDBNull("KeyCometencies")) {
                foreach (CategoryFieldItem cat in record.GetCategory("KeyCometencies")) {
                    <small class="px-1 border rounded d-inline-block" at-competency="@cat.Label">
                        @cat.Label
                    </small>
                }
            }
        </td>
        
        <td>
            <div>@if (!record.IsDBNull("PeopleRank")) {
                foreach (CategoryFieldItem cat in record.GetCategory("PeopleRank")) {
                    <small class="border rounded px-1 d-inline-block" at-rank="@cat.Label">
                        <small class="text-muted">rank:</small> @cat.Label
                    </small>
                }
            }
            </div>
            <div>
            @if (!record.IsDBNull("PotentialTier")) {
                foreach (CategoryFieldItem cat in record.GetCategory("PotentialTier")) {
                    <small class="border rounded px-1 d-inline-block" at-potential="@cat.Label">
                        <small class="text-muted">potential:</small> @cat.Label
                    </small>
                }
            }
            </div>
            
        </td>
        <td>
            @if (!record.IsDBNull("TheologicalPreferences")) {
                foreach (CategoryFieldItem cat in record.GetCategory("TheologicalPreferences")) {
                    <small class="border rounded px-1 d-inline-block" at-theo="@cat.Label">
                        @cat.Label
                    </small>
                }
            }
        </td>
    </tr>
    
    
  }
</tbody>
</table>






}

}

@helper DisplayStage(bool hasPending, string moveStatus, bool isAffected, string putInto = ""){
    if(!String.IsNullOrEmpty(putInto)){ // putInto is where we are placing the status. The table cell. That's because we call this either from the main people list OR when a user changes a person's status
        @BRT.Raw("<span _=\"init put me into " + putInto + "\">")
    }
    if(hasPending){ // if you have a pending appointment, you are all set no matter what
        <small class="text-white bg-success px-1 rounded d-block"><i class="bi bi-check-circle"></i> appointed</small>
    }
    else{ // if you are affeced BUT you have a move status set to "remain" or "appointment set" then you are also resolved
        if(isAffected && (!String.IsNullOrEmpty(moveStatus) && moveStatus=="Remain" || moveStatus=="Appointment Set")){
            <small class="text-white bg-success px-1 rounded d-block"><i class="text-warning bi bi-asterisk"></i> @moveStatus</small>
        }
        else if(isAffected){ // if you're affected, then you gotta move
            <small class="text-white bg-danger px-1 rounded d-block">move: affected</small>
        }
        else{
            if(String.IsNullOrEmpty(moveStatus)){
                <small class="bg-light px-1 rounded d-block">no move status</small>
            }
            else if(moveStatus=="Could" || moveStatus=="Should" || moveStatus=="Must" || moveStatus=="Retiring") {
                <small class="text-white bg-danger px-1 rounded d-block">move: @moveStatus</small>
            }
            else if(moveStatus=="Remain" || moveStatus=="Appointment Set") {
                <small class="text-white bg-success px-1 rounded d-block">set: @moveStatus</small>
            }
            else if(moveStatus=="No Appointment") {
                <small class="bg-warning px-1 rounded d-block">set to No Appointment</small>
            }
        }
    }
    @BRT.Raw("</span>")
}




@helper churcheswithstatus(string show="all")
{

    var adapter = EngineAdapter.Create("Contacts","AppointmentToolChurches");
    adapter.AddResultFields(new[] {"Name","MailCity","District.Name","ClergyServing.People.FirstName","ClergyServing.People.PreferredName","ClergyServing.People.LastName"}); // the basic fields
    adapter.AddResultFields(new[] {"ClergyServing.People.PendingAppointments.Church.Name","ClergyServing.People.PendingAppointments.Church.MailCity","ClergyServing.People.PendingAppointments.ExtensionMinistryPositions","ClergyServing.People.PendingAppointments.ExtensionMinistry","ClergyServing.People.PendingAppointments.ExtensionMinistryList","PendingAppointments.People.FirstName","PendingAppointments.People.PreferredName","PendingAppointments.People.LastName"}); // pending and more
    adapter.AddResultFields(new[] {"CompensationInfo","CompensationInfo.PubDate","CompensationInfo.EndDate"});
    adapter.AddResultFields(SalaryTotalFieldsFullyQualified("churches"));
    if(IsMultiConference()){
        adapter.AddResultFields(new[] {"CurrentConference"});
    }
    adapter.AddSavedFilter("ExcludeMerged");
    adapter.AddSavedFilter("ExcludeClosed");
    EngineRecordList item =  adapter.GetList(1,5000,true);
    <div class="text-center mt-1">
        
        <a hx-get="@BRT.SecureUrl("/at2ajax?" + Request.Url.ToString().Split('?')[1])" 
    hx-target="#renderdiv" hx-indicator="#indicator" href="#" 
    class="btn btn btn-outline-secondary btn-sm">
        <i class="bi bi-arrow-clockwise"></i></a>
        
        
        @item.Count.ToString("N0") churches 
        
        
        <div class="btn-group btn-group-sm" role="group" aria-label="filtering">
          <input type="checkbox" class="btn-check" id="btncheck1" autocomplete="off" _="on click toggle .d-none on <tr:not(.openchurch)/>">
          <label class="btn btn-outline-danger" for="btncheck1">Open</label>
        
          <input type="checkbox" class="btn-check" id="btncheck2" autocomplete="off" _="on click toggle the *display of .openchurch then toggle .visible on .openchurch">
          <label class="btn btn-outline-success" for="btncheck2">Resolved</label>
        </div>
    </div>
    if (item.Count > 0) {
    
 <script>
    
    
    $(document).ready(function () {
    // Setup - add a text input to each footer cell
    $('#datatable thead tr')
        .clone(true)
        .addClass('filters')
        .appendTo('#datatable thead');
 
    var table = $('#datatable').DataTable({
        "paging":         false,
            "info": false,
            "order": [[ 0, "asc" ]],
            dom: 'Bfrtip',
            buttons: [
                'csv', 'excel', 'print'
            ],
        orderCellsTop: true,
        fixedHeader: true,
        initComplete: function () {
            var api = this.api();
 
            // For each column
            api
                .columns()
                .eq(0)
                .each(function (colIdx) {
                    // Set the header cell to contain the input element
                    var cell = $('.filters th').eq(
                        $(api.column(colIdx).header()).index()
                    );
                    var title = $(cell).text();
                    $(cell).html('<input class="fcol" type="text" placeholder="' + title + '"  />');
 
                    // On every keypress in this input
                    $(
                        'input',
                        $('.filters th').eq($(api.column(colIdx).header()).index())
                    )
                        .off('keyup change')
                        .on('keyup change', function (e) {
                            e.stopPropagation();
 
                            // Get the search value
                            $(this).attr('title', $(this).val());
                            var regexr = '({search})'; //$(this).parents('th').find('select').val();
 
                            var cursorPosition = this.selectionStart;
                            // Search the column for that value
                            api
                                .column(colIdx)
                                .search(
                                    this.value != ''
                                        ? regexr.replace('{search}', '(((' + this.value + ')))')
                                        : '',
                                    this.value != '',
                                    this.value == ''
                                )
                                .draw();
 
                            $(this)
                                .focus()[0]
                                .setSelectionRange(cursorPosition, cursorPosition);
                        });
                });
        },
    });
});
    
    
    </script>

    
<table class="cell-border mt-3" id="datatable">
    <thead>
        <tr>
            
            <th>Church</th>
            <th>District</th>
            @if(IsMultiConference()){
                <th>Conf</th>
            }
            <th>Leaving</th>
            <th>Coming</th>
            <th>Status</th>
            <th>Tot sal</th>
        </tr>
    </thead>
    <tbody>
    
    
    @{
    int leaving = 0;
    int coming = 0;
}
        @foreach (EngineRecord record in item) {
        leaving = 0;
        coming = 0;
        
        <tr id="ch-@record.Id" class="churchrow visible">
            <td>
            <a data-bs-toggle="offcanvas" data-bs-target="#snapshotmodal" 
                href="#"
                hx-get="@BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record.Id)" 
                class="text-dark"
                hx-target="#snapbody" hx-indicator="#modalindicator"
                >
            @* Church SHORT Name *@
            @if (!record.IsDBNull("Name")) {
                <span>
                    @record["Name"]
                </span>
            }

            @* Mail City *@
            @if (!record.IsDBNull("MailCity")) {
                <span>
                    -  @record["MailCity"]
                </span>
            }
            </a>
            </td>
            <td>

            @* District *@
            @if (!record.IsDBNull("District")) {
                <span>
                    @foreach (EngineRecord record_district in record.GetRecordList("District")) {
                        <span>
                            @* District Name *@
                            @if (!record_district.IsDBNull("Name")) {
                                @BRT.Raw("<span _=\"on load add .d-" + record_district.Id + " to the closest parent <tr/>\">")
                                    @record_district["Name"]
                                @BRT.Raw("</span>")
                            }
                        </span>
                }
                </span>
            }
            
            </td>
            @if(IsMultiConference()){
                <td>
                    @if(record.HasField("CurrentConference") && !record.IsDBNull("CurrentConference")) {
                      <span>@record.GetFirstCategoryLabel("CurrentConference")</span>
                    }
                </td>
            }
            
            <td>
            @* Clergy currently serving *@
            @if (!record.IsDBNull("ClergyServing")) {
                <span>
                    @foreach (EngineRecord record_clergyserving in record.GetRecordList("ClergyServing")) {
                        <div><small class="text-muted">
                            @* Person (appt tool) *@
                            @if (!record_clergyserving.IsDBNull("People")) {
                                <span>
                                    @foreach (EngineRecord record_clergyserving_people in record_clergyserving.GetRecordList("People")) {
                                        

                                            @* Pending Appointments *@
                                            if (!record_clergyserving_people.IsDBNull("PendingAppointments")) {
                                                
                                                
                                            leaving +=1;
                                            <i class="bi bi-arrow-right"></i> 
                                                @* First Name *@
                                                <a data-bs-toggle="offcanvas" data-bs-target="#snapshotmodal" href="#"
                                                hx-get="@BRT.SecureUrl("/at2ajax?action=getperson&id=" + record_clergyserving_people.Id)" hx-target="#snapbody" class="text-muted"  hx-indicator="#modalindicator">
                                                @if (!record_clergyserving_people.IsDBNull("PreferredName")) {
                                                    <span>
                                                        @record_clergyserving_people["PreferredName"]
                                                    </span>
                                                }
                                                else if (!record_clergyserving_people.IsDBNull("FirstName")) {
                                                    <span>
                                                        @record_clergyserving_people["FirstName"]
                                                    </span>
                                                }
                                                
    
                                                @* Last Name *@
                                                @if (!record_clergyserving_people.IsDBNull("LastName")) {
                                                    <span>
                                                        @record_clergyserving_people["LastName"]
                                                    </span>
                                                }
                                                </a>
                                                <span> is going to </span>
                                            
                                                
                                            
                                                int numChurchesBeingAppointedTo = 0;
                                                <span>
                                                    @foreach (EngineRecord record_clergyserving_people_pendingappointments in record_clergyserving_people.GetRecordList("PendingAppointments")) {
                                                        numChurchesBeingAppointedTo+=1;
                                                        
                                                        <div>
                                                            @* Church *@
                                                            @if (!record_clergyserving_people_pendingappointments.IsDBNull("Church")) {
                                                                <span>
                                                                    @foreach (EngineRecord record_clergyserving_people_pendingappointments_church in record_clergyserving_people_pendingappointments.GetRecordList("Church")) {
                                                                        <div>
                                                                        <a data-bs-toggle="offcanvas" data-bs-target="#snapshotmodal" 
                                                                        href="#"
                                                                        hx-get="@BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record_clergyserving_people_pendingappointments_church.Id)" 
                                                                        class="text-muted"
                                                                        hx-target="#snapbody" hx-indicator="#modalindicator"
                                                                        >
                                                                            @* Church SHORT Name *@
                                                                            @if (!record_clergyserving_people_pendingappointments_church.IsDBNull("Name")) {
                                                                                <span>
                                                                                    @record_clergyserving_people_pendingappointments_church.GetString("Name").Summarize(25)
                                                                                </span>
                                                                            }

                                                                            @* Mail City *@
                                                                            @if (!record_clergyserving_people_pendingappointments_church.IsDBNull("MailCity")) {
                                                                                <span>
                                                                                     - @record_clergyserving_people_pendingappointments_church["MailCity"]
                                                                                </span>
                                                                            }
                                                                        </a>
                                                                        </div>
                                                                }
                                                                </span>
                                                            }
                                                            
                                                            
                                                            @if (!record_clergyserving_people_pendingappointments.IsDBNull("ExtensionMinistryPositions")) {
                                                                <small class="text-muted">
                                                                    @foreach (CategoryFieldItem cat in record_clergyserving_people_pendingappointments.GetCategory("ExtensionMinistryPositions")) {
                                                                        <span>
                                                                            @cat.Label
                                                                        </span>
                                                                    }
                                                                </small>
                                                            }
                                        
                                                          
                                                            @if (!record_clergyserving_people_pendingappointments.IsDBNull("ExtensionMinistry")) {
                                                                <small class="text-muted">
                                                                    @record_clergyserving_people_pendingappointments["ExtensionMinistry"]
                                                                </small>
                                                            }
                                        
                                                            
                                                            @if (!record_clergyserving_people_pendingappointments.IsDBNull("ExtensionMinistryList")) {
                                                                <small class="text-muted">
                                                                    extension ministry
                                                                </small>
                                                            }
                                                            
                                                        </div>
                                                }
                                                </span>
                                            }
                                            
                                            
                                        
                                }
                                </span>
                            }
                        </small></div>
                }
                </span>
            }
            </td>
            <td>
            @* Incoming Projected Appointments *@
            @if (!record.IsDBNull("PendingAppointments")) {
                
                
                <small class="text-muted">
                    @foreach (EngineRecord record_pendingappointments in record.GetRecordList("PendingAppointments")) {
                        <div>
                            @* People *@
                            @if (!record_pendingappointments.IsDBNull("People")) {
                                coming +=1;
                                <span><i class="bi bi-arrow-left"></i> 
                                    @foreach (EngineRecord record_pendingappointments_people in record_pendingappointments.GetRecordList("People")) {
                                        <a data-bs-toggle="offcanvas" data-bs-target="#snapshotmodal" href="#"
                                            hx-get="@BRT.SecureUrl("/at2ajax?action=getperson&id=" + record_pendingappointments_people.Id)" hx-target="#snapbody" class="text-muted" hx-indicator="#modalindicator">
                                            @* First Name *@
                                            @if (!record_pendingappointments_people.IsDBNull("PreferredName")) {
                                                <span>
                                                    @record_pendingappointments_people["PreferredName"]
                                                </span>
                                            }
                                            else if (!record_pendingappointments_people.IsDBNull("FirstName")) {
                                                <span>
                                                    @record_pendingappointments_people["FirstName"]
                                                </span>
                                            }

                                            @* Last Name *@
                                            @if (!record_pendingappointments_people.IsDBNull("LastName")) {
                                                <span>
                                                    @record_pendingappointments_people["LastName"]
                                                </span>
                                            }
                                        </a>
                                            <span class="text-muted"> is coming</span>
                                }
                                
                                </span>
                            }
                        </div>
                }
                </small>
                
            }
            
            
            </td>
            <td>
                @if(leaving==coming || leaving < coming){
                    <span _="on load add .resolvedchurch to the closest parent <tr/>"></span>
                }
                else {
                    <span _="on load add .openchurch to the closest parent <tr/>"></span>
                }
                <small class="text-white">
                    <span class="@(leaving==coming || leaving<coming?" px-1 bg-success rounded d-inline-block text-nowrap":"px-1 bg-danger rounded d-inline-block text-nowrap")">@leaving leaving, @coming coming</span>
                </small>
            </td>
            
            <td class="bg-success bg-opacity-10 salary-field">
                @if(!record.IsDBNull("CompensationInfo")) {
                    @BRT.Raw(GetTotalSalary(record.GetRecordList("CompensationInfo")))
                }
            </td>
            
        </tr>
        }                          @* END: foreach (EngineRecord record in item) *@
</tbody>
</table>
    }                              @* END: if (item.Count > 0) *@


}


@helper getperson(int id, string churchorperson = "person"){
    
        var adapter = EngineAdapter.Create("Contacts","AppointmentToolPeople");
        adapter.AddResultFields(new[] {"PrimaryImage","FirstName","PreferredName","LastName","MoveStatusPerson","MoveStatusChurch","MoveStatus","MoveStatusNotes","AppointmentFit","PeopleRank",
        "PotentialTier","KeyCometencies","ClergySpouseTags","TheologicalPreferences","ClergyStatus","MaritalStatus","TrainingCertLog.TrainingType","TrainingCertLog.NamedClass",
        "TrainingCertLog.CompletionStatus","TrainingCertLog.PubDate","TrainingCertLog.ExpiresOn","TrainingCertLog.TrainingFile","ChildrenInfo","Spouse",
        "ClergyHasThisSpouse.FirstName","ClergyHasThisSpouse.LastName","DateStartedInConference","DateOfBirth","Ethnicity","Gender","HomeChurch.District.Name",
        "CurrentConferenceDropDown","ConfidentialNote","GCFAId","AppointmentToolFiles","Registrations.EventName","Registrations.RegisterDate","Registrations.AccessKey"}); // the basic fields
        
        adapter.AddResultFields(new[] {"Salary","Salary.PubDate","Salary.EndDate","Salary.CompensationTags"}); // salary fields
        adapter.AddResultFields(SalaryTotalFieldsFullyQualified("people"));
        adapter.AddCondition("<Eq FieldId=\"Id\" Value=\"" + id + "\"/>");
        
        EngineRecordList item =  adapter.GetList(1,1,true);
        
        <div>
            @if (item.Count > 0) {
                    foreach (EngineRecord record in item) {
                        <h4 class="p-2 bg-white d-flex justify-content-between align-items-center border" id="modalhead">
                            <span>
                                @if(!record.IsDBNull("FirstName")) {
                                  <span>@record["FirstName"]</span>
                                }
                                @if(!record.IsDBNull("PreferredName")) {
                                  <span> (@record["PreferredName"])</span>
                                }
                                @if(!record.IsDBNull("LastName")) {
                                   <span> @record["LastName"]</span>
                                }
                            </span>
                            <span style="font-size: 60% !important;">
                                <a href="#" class="d-none btn btn-primary btn-sm" _="on click add .d-none to me" id="back" hx-get="@BRT.SecureUrl("/at2ajax?action=getperson&id=" + Request.QueryString["id"])" 
                                    hx-target="#snapbody" hx-indicator="#modalindicator"><i class="bi bi-arrow-left"></i> @if (!record.IsDBNull("FirstName")) {
                                    <span>to @record["FirstName"]</span>
                                    }
                                </a>
                                
                                <a hx-get="@BRT.SecureUrl("/at2ajax?action=pendingdataform&formorpersonid=new")" 
                                hx-target="#snapbody" hx-indicator="#modalindicator" href="#" 
                                class="btn btn-sm btn-success editlink"><i class="bi bi-plus-circle"></i> Appoint</a>
                                <a href="https://@EngineCore.CustomerContext.Current.ShortName .brtapp.com/manage/contacts-appointmenttoolpeople#page=1,@id" target="_blank" class="btn btn-outline-secondary btn-sm editlink">
                                
                                    Console
                                </a>
                                
                                
                                
                                <a title="go full screen" href="@BRT.SecureUrl("/at2ajax?action=print&ajaxurl=" + Base64Encode(Request.Url.ToString().Split('?')[1]))" target="_blank" class="btn btn btn-outline-secondary btn-sm">
                                    <i class="bi bi-arrows-fullscreen"></i>
                                </a>
                                
                                
                            </span>
                        </h4>
                        
     
                        
                        <div id="modalmeat" class="mt-3">
                            <div class="row mb-3">
                                @{string secondcolumn = "col-xl-12 ";}
                                @if (!record.IsDBNull("PrimaryImage") && record.GetFiles("PrimaryImage").Count==1) {
                                    secondcolumn = "col-xl-9 ";
                                    <div class="col-xl-3 col-12">
                                    @foreach (FileFieldItem file in record.GetFiles("PrimaryImage")) {
                                        <div>
                                            @if (file.ContentType.StartsWith("image/")) {
                                                <a href="@(file.Url)" target="_blank"><img src="@(file.Url)?width=246&height=246&mode=crop" class="p-2 border img-fluid rounded"/></a>
                                            }
                                        </div>
                                    }
                                    </div>
                                }
                                <div class="@(secondcolumn + "col-12 table-responsive")">
                                    <table class="table table-bordered table-sm">
                                        @if(record.HasField("GCFAId") && !record.IsDBNull("GCFAId")){
                                            <tr>
                                                <td>
                                                    <b>GCFA Id</b>
                                                </td>
                                                <td>
                                                    @record.GetString("GCFAId")
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("ClergyStatus") && !record.IsDBNull("ClergyStatus")) {
                                            <tr>
                                                <td>
                                                    <b>Clergy Status</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("ClergyStatus")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if(!record.IsDBNull("Salary")) {
                                            <tr>
                                                <td>
                                                    <b>Total comp</b>
                                                </td>
                                                <td>
                                                    
                                                    @BRT.Raw(GetTotalSalary(record.GetRecordList("Salary")))
                                                    
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("DateStartedInConference") && !record.IsDBNull("DateStartedInConference")) {
                                            <tr>
                                                <td>
                                                    <b>Date Started In Conference</b>
                                                </td>
                                                <td>
                                                    @record.GetDateTime("DateStartedInConference").ToShortDateString()
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <b>Years in Conference</b>
                                                </td>
                                                <td>
                                                    @{
                                                        var today = DateTime.Today;
                                                        var yearStarted = record.GetDateTime("DateStartedInConference");
                                                        var yic = today.Year - yearStarted.Year;
                                                        if (yearStarted.Date > today.AddYears(-yic)) {
                                                            yic--;
                                                        }
                                                    }
                                                    <span>@yic</span>
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("DateOfBirth") && !record.IsDBNull("DateOfBirth")) {
                                            <tr>
                                                <td>
                                                    <b>Age</b>
                                                </td>
                                                <td>
                                                    @{
                                                        var today = DateTime.Today;
                                                        var birthdate = record.GetDateTime("DateOfBirth");
                                                        var age = today.Year - birthdate.Year;
                                                        if (birthdate.Date > today.AddYears(-age)) {
                                                            age--;
                                                        }
                                                    }
                                                    <span>@age</span>
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("Ethnicity") && !record.IsDBNull("Ethnicity")) {
                                            <tr>
                                                <td>
                                                    <b>Ethnicity</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("Ethnicity")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("Gender") && !record.IsDBNull("Gender")) {
                                            <tr>
                                                <td>
                                                    <b>Gender</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("Gender")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("ClergySpouseTags") && !record.IsDBNull("ClergySpouseTags")) {
                                            <tr>
                                                <td>
                                                    <b>Clergy Spouse Tags</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("ClergySpouseTags")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("MaritalStatus") && !record.IsDBNull("MaritalStatus")) {
                                            <tr>
                                                <td>
                                                    <b>Marital Status</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("MaritalStatus")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("Spouse") && !record.IsDBNull("Spouse")) {
                                            <tr>
                                                <td>
                                                    <b>Spouse</b>
                                                </td>
                                                <td>
                                                    @record["Spouse"]
                                                </td>
                                            </tr>
                                        } else if (record.HasField("ClergyHasThisSpouse") && !record.IsDBNull("ClergyHasThisSpouse") && record.GetRecordList("ClergyHasThisSpouse").Count > 0) {
                                            <tr>
                                                <td>
                                                    <b>Spouse</b>
                                                </td>
                                                <td>
                                                    @foreach (EngineRecord record_people in record.GetRecordList("ClergyHasThisSpouse")) {
                                                        <a _="on click remove .d-none from #back" href="#" class="text-dark"
                                                            hx-get="@BRT.SecureUrl("/at2ajax?action=getperson&id=" + record_people.Id)" hx-target="#modalmeat" hx-indicator="#modalindicator"
                                                        >
                                                            @if (record_people.HasField("PreferredName") && !record_people.IsDBNull("PreferredName")) {
                                                                <span>@record_people["PreferredName"]</span>
                                                            } else if (record_people.HasField("FirstName") && !record_people.IsDBNull("FirstName")) {
                                                                <span>@record_people["FirstName"]</span>
                                                            }
                                                            @if (record_people.HasField("LastName") && !record_people.IsDBNull("LastName")) {
                                                                <span>@record_people["LastName"]</span>
                                                            }
                                                        </a>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("ChildrenInfo") && !record.IsDBNull("ChildrenInfo")) {
                                            <tr>
                                                <td>
                                                    <b>Children Info</b>
                                                </td>
                                                <td>
                                                    @record["ChildrenInfo"]
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("HomeChurch") && !record.IsDBNull("HomeChurch") && record.GetRecordList("HomeChurch").Count > 0) {
                                            foreach (EngineRecord record_homechurch in record.GetRecordList("HomeChurch")) {
                                                if (record_homechurch.HasField("District") && !record_homechurch.IsDBNull("District") && record_homechurch.GetRecordList("District").Count > 0) {
                                                    var dist = record_homechurch.GetRecordList("District")[0];
                                                    if(dist.HasField("Name") && !dist.IsDBNull("Name")){
                                                        <tr>
                                                            <td>
                                                                <b>District</b>
                                                            </td>
                                                            <td>
                                                                @dist["Name"]
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            }
                                        }
                                        @if (record.HasField("CurrentConferenceDropDown") && !record.IsDBNull("CurrentConferenceDropDown")) {
                                            <tr>
                                                <td>
                                                    <b>Conference</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("CurrentConferenceDropDown")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("MoveStatusPerson") && !record.IsDBNull("MoveStatusPerson")) {
                                            <tr>
                                                <td>
                                                    <b>Pastor's Move Preference</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("MoveStatusPerson")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("MoveStatusChurch") && !record.IsDBNull("MoveStatusChurch")) {
                                            <tr>
                                                <td>
                                                    <b>Church's Move Preference</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("MoveStatusChurch")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("MoveStatus") && !record.IsDBNull("MoveStatus")) {
                                            <tr>
                                                <td>
                                                    <b>Cabinet Move Status</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("MoveStatus")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("MoveStatusNotes") && !record.IsDBNull("MoveStatusNotes")) {
                                            <tr>
                                                <td>
                                                    <b>Notes</b>
                                                </td>
                                                <td>
                                                    <div class="showcap">
                                                        @record["MoveStatusNotes"]
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("AppointmentFit") && !record.IsDBNull("AppointmentFit")) {
                                            <tr>
                                                <td>
                                                    <b>Appointment Fit</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("AppointmentFit")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("PeopleRank") && !record.IsDBNull("PeopleRank")) {
                                            <tr>
                                                <td>
                                                    <b>Clergy Performance Tier</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("PeopleRank")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("PotentialTier") && !record.IsDBNull("PotentialTier")) {
                                            <tr>
                                                <td>
                                                    <b>Potential Tier</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("PotentialTier")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("KeyCometencies") && !record.IsDBNull("KeyCometencies")) {
                                            <tr>
                                                <td>
                                                    <b>Key Competencies</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("KeyCometencies")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("TheologicalPreferences") && !record.IsDBNull("TheologicalPreferences")) {
                                            <tr>
                                                <td>
                                                    <b>Theological Preferences</b>
                                                </td>
                                                <td>
                                                    @foreach (CategoryFieldItem cat in record.GetCategory("TheologicalPreferences")) {
                                                        @cat.Label
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        @if(record.HasField("ConfidentialNote") && !record.IsDBNull("ConfidentialNote")){
                                            <tr>
                                                <td colspan="2">
                                                    <h5>Confidential Note</h5>
                                                    <div class="showcap">@BRT.Raw(record.GetString("ConfidentialNote"))</div>
                                                </td>
                                            </tr>
                                        }
                                        @if (record.HasField("Registrations") && !record.IsDBNull("Registrations") && record.GetRecordList("Registrations").Count > 0) {
                                            <tr>
                                                <td>
                                                    <b>Forms</b>
                                                </td>
                                                <td>
                                                    <div class="showcap">
                                                        
                                                        @foreach (EngineRecord f in record.GetRecordList("Registrations")) {
                                                            <div class="pt-1 border-top mt-1">
                                                                <div><small>@f.GetDateTime("RegisterDate").ToString("d")</small></div>
                                                                <div>
                                                                    <small>
                                                                        <a href="https://@EngineCore.CustomerContext.Current.ShortName -reg.brtapp.com/confirm/@f.GetString("AccessKey")" target="_blank" class="text-dark">@f.GetString("EventName")
                                                                        </a>
                                                                    </small>
                                                                </div>
                                                            </div>
                                                        }
                                                        
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </table>
                                </div>
                            </div>
                            <div class="tabularcontent">
                                @getaffecting(id)
                                @getProjectedAppts(id, churchorperson)
                                @getAppts(id, churchorperson)
                                
                                @getMetricsPerson(id)
                                @*getSalary(id, churchorperson)*@
                                
                                @if(record.HasField("AppointmentToolFiles") && !record.IsDBNull("AppointmentToolFiles") && record.GetFiles("AppointmentToolFiles").Count > 0){
                                    var l = new System.Collections.Generic.List<FileFieldItem>();
                                    foreach(FileFieldItem f in record.GetFiles("AppointmentToolFiles")){
                                        l.Add(f);
                                    }
                                    l.Reverse();
                                    <h5>Appointment Tool Files</h5>
                                    <div class="table-responsive">
                                        <table class="table table-sm table-bordered">
                                            <tr class="bg-light">
                                                <th>File</th>
                                                <th>Description</th>
                                                <th>Date</th>
                                            </tr>
                                            @foreach(FileFieldItem f in l){
                                                <tr>
                                                    <td>
                                                        <a href="@f.Url" target="_blank" class="text-dark">
                                                            @if(!String.IsNullOrEmpty(f.Title)){
                                                                <span>@f.Title</span>
                                                            } else {
                                                                <span>@f.Filename</span>
                                                            }
                                                        </a>
                                                    </td>
                                                    <td>
                                                        @if(!String.IsNullOrEmpty(f.Description)){
                                                            <div>@f.Description</div>
                                                        }
                                                    </td>
                                                    <td>
                                                        @f.LastModified.ToString().Substring(0, 10)
                                                    </td>
                                                </tr>
                                            }
                                        </table>
                                    </div>
                                }
                                
                                @if (record.HasField("TrainingCertLog") && !record.IsDBNull("TrainingCertLog") && record.GetRecordList("TrainingCertLog").Count > 0) {
                                    <h5>Trainings, Certifications, Classes</h5>
                                    <div class="table-responsive">
                                        <table class="table table-sm table-bordered">
                                            <tr class="bg-light">
                                                <th>Type</th>
                                                <th>Class Name</th>
                                                <th>Status</th>
                                                <th>Date</th>
                                                <th>Expires On</th>
                                                <th>File(s)</th>
                                            </tr>
                                            @foreach (EngineRecord record_trainingcertlog in record.GetRecordList("TrainingCertLog")) {
                                                <tr>
                                                    <td>
                                                        @if (record_trainingcertlog.HasField("TrainingType") && !record_trainingcertlog.IsDBNull("TrainingType")) {
                                                            foreach (CategoryFieldItem cat in record_trainingcertlog.GetCategory("TrainingType")) {
                                                                <span>@cat.Label</span>
                                                            }
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (record_trainingcertlog.HasField("NamedClass") && !record_trainingcertlog.IsDBNull("NamedClass")) {
                                                            <span>@record_trainingcertlog["NamedClass"]</span>
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (record_trainingcertlog.HasField("CompletionStatus") && !record_trainingcertlog.IsDBNull("CompletionStatus")) {
                                                            foreach (CategoryFieldItem cat in record_trainingcertlog.GetCategory("CompletionStatus")) {
                                                                <span>@cat.Label</span>
                                                            }
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (record_trainingcertlog.HasField("PubDate") && !record_trainingcertlog.IsDBNull("PubDate")) {
                                                            @record_trainingcertlog.GetDateTime("PubDate").ToShortDateString()
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (record_trainingcertlog.HasField("ExpiresOn") && !record_trainingcertlog.IsDBNull("ExpiresOn")) {
                                                            @record_trainingcertlog.GetDateTime("ExpiresOn").ToShortDateString()
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (record_trainingcertlog.HasField("TrainingFile") && !record_trainingcertlog.IsDBNull("TrainingFile")) {
                                                            foreach (FileFieldItem file in record_trainingcertlog.GetFiles("TrainingFile")) {
                                                                <div>
                                                                    <a href="@(file.Url)" target="_blank" class="text-dark">@(String.IsNullOrEmpty(file.Title) ? file.Filename : file.Title)</a>
                                                                </div>
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        </table>
                                    </div>
                                }
                                @*<h5>Charts from GCFA (if exists)</h5>*@
                                @getappointmentchurchgraphs(id)
                                
                            </div>
                        </div>
                    }
            }
        </div>
    }





@helper currentappointments(){ // all the current appointments on a page


@BRT.Lister(tableId: "Content", viewId: "Appointments",
    condition: "<IsNull Not=\"true\" Scope=\"Both\" FieldId=\"People.Id\"/>",
    pageSize:10000,
    savedFilters: new[] {"CurrentAppointmentsChDistExt"},
    fields: new[] {"People.FirstName","People.PreferredName","People.LastName","People.ClergyStatus","People.DateStartedInConference","AppointmentPosition","JobTitle","StartDate","EndDate","Church.Name","Church.District.Name","District.Name","ExtensionMinistry","ServiceTime","ExtensionMinistryPositions"},
    template:
@<div>
    <div class="text-center mt-1">@item.Count.ToString("N0") current appointments</div>
    @if (item.Count > 0) {
        <script>
    $(document).ready( function () {
        $('#datatable').dataTable( {
            "paging":         false,
            "info": false,
            dom: 'Bfrtip',
            buttons: [
                'csv', 'excel', 'print'
            ]
            
            
            } );
    } );
    </script>
        
        <table class="cell-border mt-3" id="datatable">
            <thead>
                <tr>
                    <th>Person</th>
                    <th>Position/Job</th>
                    <th>Start</th>
                    <th>End</th>
                    <th>Appointment</th>
                    
                    <th>Time</th>
                    
                </tr>
            </thead>
            <tbody>
            @foreach (EngineRecord record in item) {
                <tr>
                    @* People *@
                    @{string thisDataSort = "";} 
                    @if (!record.IsDBNull("People")) {
                        if (!record.GetRecordList("People")[0].IsDBNull(("LastName"))) {
                           thisDataSort = record.GetRecordList("People")[0].GetString("LastName"); 
                        }
                        if (!record.GetRecordList("People")[0].IsDBNull(("FirstName"))) {
                           thisDataSort += record.GetRecordList("People")[0].GetString("FirstName"); 
                        }
                    }
                    <td data-sort="@thisDataSort">
                        @if (!record.IsDBNull("People")) {
                            foreach (EngineRecord record_people in record.GetRecordList("People")) {
                                @BRT.Raw("<a data-bs-toggle=\"offcanvas\" data-bs-target=\"#snapshotmodal\" href=\"#\" hx-get=\"" + BRT.SecureUrl("/at2ajax?action=getperson&id=" + record_people.Id) +"\" hx-target=\"#snapbody\"  hx-indicator=\"#modalindicator\" class=\"me-1 text-dark\">")
                                if (!record_people.IsDBNull("PreferredName")) {
                                    <span>
                                        @record_people["PreferredName"]
                                    </span>
                                }
                                else if (!record_people.IsDBNull("FirstName")) {
                                    <span>
                                        @record_people["FirstName"]
                                    </span>
                                }
                                @* Last Name *@
                                if (!record_people.IsDBNull("LastName")) {
                                    <span>
                                        @record_people["LastName"]
                                    </span>
                                }
                                @BRT.Raw("</a>")
                            }
                        }
                    </td>

                    @* Appointment Position *@
                    <td>
                        @if (!record.IsDBNull("AppointmentPosition")) {
                            foreach (CategoryFieldItem cat in record.GetCategory("AppointmentPosition")) {
                                <div>
                                    @cat.Label
                                </div>
                            }
                        }
                    
                        @if (!record.IsDBNull("JobTitle")) {
                            <div>@record["JobTitle"]</div>
                        }
                    </td>

                    
                    <td data-sort="@if(!record.IsDBNull("StartDate")){@record.GetDateTime("StartDate").ToString("yyyy-MM-dd")}">
                        @if (!record.IsDBNull("StartDate")) {
                            @record.GetDateTime("StartDate").ToShortDateString()
                        }
                    </td>

                    @* End *@
                    <td data-sort="@if(!record.IsDBNull("EndDate")){@record.GetDateTime("EndDate").ToString("yyyy-MM-dd")}">
                        @if (!record.IsDBNull("EndDate")) {
                            @record.GetDateTime("EndDate").ToShortDateString()
                        }
                    </td>

                    @* Church *@
                    <td>
                        @if (!record.IsDBNull("Church")) {
                            foreach (EngineRecord record_church in record.GetRecordList("Church")) {
                                @BRT.Raw("<a hx-swap=\"innerHTML hx-indicator=\"#modalindicator\" scroll:top\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#snapshotmodal\" href=\"#\" hx-get=\"" + BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record_church.Id) +"\" hx-target=\"#snapbody\"  hx-indicator=\"#modalindicator\" class=\"me-1 text-dark\">")
                                @* Church SHORT Name *@
                                if (!record_church.IsDBNull("Name")) {
                                    <span>
                                        @record_church["Name"]
                                    </span>
                                }

                                @* District *@
                                if (!record_church.IsDBNull("District")) {
                                    <span>
                                        @foreach (EngineRecord record_church_district in record_church.GetRecordList("District")) {
                                            <span>
                                                @* District Name *@
                                                @if (!record_church_district.IsDBNull("Name")) {
                                                    <span>
                                                         - @record_church_district["Name"]
                                                    </span>
                                                }
                                            </span>
                                    }
                                    </span>
                                    @BRT.Raw("</a>")
                                }
                            }
                        }
                        
                        @if (!record.IsDBNull("District")) {
                            <div></div><small class="text-muted">District: </small>
                            foreach (EngineRecord record_district in record.GetRecordList("District")) {
                                @* District Name *@
                                if (!record_district.IsDBNull("Name")) {
                                    <span>
                                        @record_district["Name"]
                                    </span>
                                }
                            }
                        }
                        
                        @if (!record.IsDBNull("ExtensionMinistry")) {
                            <div></div><small class="text-muted">Ext Min: </small>
                            <span>@record["ExtensionMinistry"]</span>
                        }
                        
                        @if (!record.IsDBNull("ExtensionMinistryPositions")) {
                            <div></div><small class="text-muted">Non-church: </small>
                            foreach (CategoryFieldItem cat in record.GetCategory("ExtensionMinistryPositions")) {
                                <span>
                                    @cat.Label
                                </span>
                            }
                        }
                    </td>

                    @* Service Time *@
                    <td>
                        @if (!record.IsDBNull("ServiceTime")) {
                            foreach (CategoryFieldItem cat in record.GetCategory("ServiceTime")) {
                                <span>
                                    @cat.Label
                                </span>
                            }
                        }
                    </td>

                    
                </tr>
            }
            </tbody>
        </table>
        }

</div>
)

}


@helper getAppts(int id, string churchorperson = "church"){ // this is called from getperson and possibly also getchurch
    
        string cond = "";
        
        if(churchorperson == "church"){
            <!--<p>church</p>-->
            cond = "<And><Eq Scope=\"Both\" FieldId=\"Church.Id\" Value=\"" + id + "\"/><IsNull Not=\"true\" Scope=\"Both\" FieldId=\"People.Id\"/></And>";
        } else if(churchorperson == "person"){
            <!--<p>person</p>-->
            cond = "<Eq Scope=\"Both\" FieldId=\"People.Id\" Value=\"" + id + "\"/>";
        } else if(churchorperson == null){
            <!--<p>blank</p>-->
        }
        
        @*
        <!--=================================-->
        <!--CURRENT APPOINTMENTS-->
        <!--=================================-->
        *@
        
        @BRT.Lister(tableId: "Content", viewId: "Appointments",
        condition: cond,
        savedFilters: new[] {"CurrentAppointmentsChDistExt"},
        fields: new[] {"People.FirstName","People.PreferredName","People.LastName","People.ClergyStatus",
        "AppointmentPosition","StartDate","EndDate","ServiceTime",
        "Church.Name","ExtensionMinistryPositions","ExtensionMinistryList.Name","ExtensionMinistry","District.Name"},
        template:
        @<div>
            @if (item.Count > 0) {
                <h5>Current Appointment(s)</h5>
                <div class="table-responsive">
                    <table class="table table-sm table-bordered">
                        <tr class="bg-light">
                            <th>
                                @if(churchorperson == "person"){
                                    <span>Appointed to</span>
                                } else if(churchorperson == "church"){
                                    <span>Clergy</span>
                                }
                            </th>
                            @if(churchorperson == "church"){
                                <th>Clergy Status</th>
                            }
                            <th>Position</th>
                            <th>Start</th>
                            <th>YUA</th>
                            <th>Service Time</th>
                        </tr>
                        @foreach (EngineRecord record in item) {
                            <tr>
                                <td>
                                    @if(churchorperson == "person"){
                                        if (record.HasField("Church") && !record.IsDBNull("Church") && record.GetRecordList("Church").Count > 0) {
                                            if(!record.GetRecordList("Church")[0].IsDBNull("Name")){
                                                <div>
                                                    <a 
                                                        hx-get="@BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record.GetRecordList("Church")[0].Id)" 
                                                        hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                        _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                    >
                                                        @record.GetRecordList("Church")[0]["Name"]
                                                    </a>
                                                </div>
                                            }
                                        }  
                                        if (record.HasField("ExtensionMinistryPositions") && !record.IsDBNull("ExtensionMinistryPositions")) {
                                            <div>@record.GetFirstCategoryLabel("ExtensionMinistryPositions")</div>
                                        }
                                        if(record.HasField("District") && !record.IsDBNull("District") && record.GetRecordList("District").Count > 0){
                                            <div>@record.GetRecordList("District")[0].GetString("Name")</div>
                                        } 
                                        if (record.HasField("ExtensionMinistryList") && !record.IsDBNull("ExtensionMinistryList") && record.GetRecordList("ExtensionMinistryList").Count > 0){
                                            <div>@record.GetRecordList("ExtensionMinistryList")[0].GetString("Name")</div>
                                        } 
                                        if(record.HasField("ExtensionMinistry") && !record.IsDBNull("ExtensionMinistry")){
                                            <div>@record["ExtensionMinistry"]</div>
                                        }
                                    } else if (churchorperson == "church"){
                                        if (record.HasField("People") && !record.IsDBNull("People") && record.GetRecordList("People").Count > 0) {
                                            foreach (EngineRecord record_people in record.GetRecordList("People")) {
                                                <a _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                    hx-get="@BRT.SecureUrl("/at2ajax?action=getperson&id=" + record_people.Id)" hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                >
                                                    @if (record_people.HasField("PreferredName") && !record_people.IsDBNull("PreferredName")) {
                                                        <span>@record_people["PreferredName"]</span>
                                                    } else if (record_people.HasField("FirstName") && !record_people.IsDBNull("FirstName")) {
                                                        <span>@record_people["FirstName"]</span>
                                                    }
                                                    @if (record_people.HasField("LastName") && !record_people.IsDBNull("LastName")) {
                                                        <span>@record_people["LastName"]</span>
                                                    }
                                                </a>
                                            }
                                        }
                                    }
                                </td>
                                @if(churchorperson == "church"){
                                    <td>
                                        @if (record.HasField("People") && !record.IsDBNull("People") && record.GetRecordList("People").Count > 0) {
                                            foreach (EngineRecord record_people in record.GetRecordList("People")) {
                                                if (record_people.HasField("ClergyStatus") && !record_people.IsDBNull("ClergyStatus")) {
                                                    foreach (CategoryFieldItem cat in record_people.GetCategory("ClergyStatus")) {
                                                        <span>@cat.Abbrev</span>
                                                    }
                                                }
                                            }
                                        }
                                    </td>
                                }
                                <td>
                                    @if (record.HasField("AppointmentPosition") && !record.IsDBNull("AppointmentPosition")) {
                                        foreach (CategoryFieldItem cat in record.GetCategory("AppointmentPosition")) {
                                            @cat.Label
                                        }
                                    }
                                </td>
                                <td>
                                    @if (record.HasField("StartDate") && !record.IsDBNull("StartDate")) {
                                        @record.GetDateTime("StartDate").ToShortDateString()
                                    }
                                </td>
                                <td>
                                    @if (record.HasField("StartDate") && !record.IsDBNull("StartDate")) {
                                        int years = DateTime.Now.Year - record.GetDateTime("StartDate").Year;
                                        <span>@years years</span>
                                    } else {
                                        <span>(start date not available)</span>
                                    }
                                </td>
                                <td>
                                    @if (record.HasField("ServiceTime") && !record.IsDBNull("ServiceTime")) {
                                        foreach (CategoryFieldItem cat in record.GetCategory("ServiceTime")) {
                                            @cat.Label
                                        }
                                    }
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            }
        </div>)
        
        @*
        <!--=================================-->
        <!--PAST APPOINTMENTS-->
        <!--=================================-->
        *@
        
        @BRT.Lister(tableId: "Content", viewId: "Appointments",
        condition: cond,
        fields: new[] {"People.FirstName","People.PreferredName","People.LastName","People.ClergyStatus",
        "AppointmentPosition","StartDate","EndDate","ServiceTime",
        "Church.Name","ExtensionMinistryPositions","ExtensionMinistryList.Name","ExtensionMinistry","District.Name"},
        template:
        @<div>
            @if (item.Count > 0) {
                bool go = false;
                bool ret = false;
                foreach (EngineRecord record in item) {
                    if(record.HasField("ExtensionMinistryPositions") && !record.IsDBNull("ExtensionMinistryPositions") && record.GetFirstCategoryLabel("ExtensionMinistryPositions").IndexOf("Retire", StringComparison.OrdinalIgnoreCase) >= 0){
                        ret = true;
                    }
                    if((record.HasField("EndDate") && !record.IsDBNull("EndDate") && record.GetDateTime("EndDate") < DateTime.Today) || ret){
                        go = true;
                        break;
                    }
                }
                if(go){
                    <h5>Past Appointment(s)</h5>
                    <div class="showcap">
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <tr class="bg-light">
                                <th>
                                    @if(churchorperson == "person"){
                                        <span>Appointed to</span>
                                    } else if(churchorperson == "church"){
                                        <span>Clergy</span>
                                    }
                                </th>
                                <th>Position</th>
                                <th>Start</th>
                                <th>End</th>
                                <th>Service Time</th>
                            </tr>
                            @foreach (EngineRecord record in item) {
                                bool retired = false;
                                if(record.HasField("ExtensionMinistryPositions") && !record.IsDBNull("ExtensionMinistryPositions") && record.GetFirstCategoryLabel("ExtensionMinistryPositions").IndexOf("Retire", StringComparison.OrdinalIgnoreCase) >= 0){
                                    retired = true;
                                }
                                if((record.HasField("EndDate") && !record.IsDBNull("EndDate") && record.GetDateTime("EndDate") < DateTime.Today) || retired){
                                    <tr>
                                        <td>
                                            @if(churchorperson == "person"){
                                                if (record.HasField("Church") && !record.IsDBNull("Church") && record.GetRecordList("Church").Count > 0) {
                                                        if(!record.GetRecordList("Church")[0].IsDBNull("Name")){
                                                            <div>
                                                                <a _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                                    hx-get="@BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record.GetRecordList("Church")[0].Id)" hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                                >
                                                                    @record.GetRecordList("Church")[0]["Name"]
                                                                </a>
                                                            </div>
                                                        }
                                                    }  
                                                    if (record.HasField("ExtensionMinistryPositions") && !record.IsDBNull("ExtensionMinistryPositions")) {
                                                        <div>@record.GetFirstCategoryLabel("ExtensionMinistryPositions")</div>
                                                    }
                                                    if(record.HasField("District") && !record.IsDBNull("District") && record.GetRecordList("District").Count > 0){
                                                        <div>@record.GetRecordList("District")[0].GetString("Name")</div>
                                                    } 
                                                    if (record.HasField("ExtensionMinistryList") && !record.IsDBNull("ExtensionMinistryList") && record.GetRecordList("ExtensionMinistryList").Count > 0){
                                                        <div>@record.GetRecordList("ExtensionMinistryList")[0].GetString("Name")</div>
                                                    } 
                                                    if(record.HasField("ExtensionMinistry") && !record.IsDBNull("ExtensionMinistry")){
                                                        <div>@record["ExtensionMinistry"]</div>
                                                    }
                                            } else if (churchorperson == "church"){
                                                if (record.HasField("People") && !record.IsDBNull("People") && record.GetRecordList("People").Count > 0) {
                                                    foreach (EngineRecord record_people in record.GetRecordList("People")) {
                                                        <a _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                            hx-get="@BRT.SecureUrl("/at2ajax?action=getperson&id=" + record_people.Id)" hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                        >
                                                            @if (record_people.HasField("PreferredName") && !record_people.IsDBNull("PreferredName")) {
                                                                <span>@record_people["PreferredName"]</span>
                                                            } else if (record_people.HasField("FirstName") && !record_people.IsDBNull("FirstName")) {
                                                                <span>@record_people["FirstName"]</span>
                                                            }
                                                            @if (record_people.HasField("LastName") && !record_people.IsDBNull("LastName")) {
                                                                <span>@record_people["LastName"]</span>
                                                            }
                                                        </a>
                                                    }
                                                }
                                            }
                                        </td>
                                        <td>
                                            @if (record.HasField("AppointmentPosition") && !record.IsDBNull("AppointmentPosition")) {
                                                foreach (CategoryFieldItem cat in record.GetCategory("AppointmentPosition")) {
                                                    @cat.Label
                                                }
                                            }
                                        </td>
                                        <td>
                                            @if (record.HasField("StartDate") && !record.IsDBNull("StartDate")) {
                                                @record.GetDateTime("StartDate").ToShortDateString()
                                            }
                                        </td>
                                        <td>
                                            @if (record.HasField("EndDate") && !record.IsDBNull("EndDate")) {
                                                @record.GetDateTime("EndDate").ToShortDateString()
                                            }
                                        </td>
                                        <td>
                                            @if (record.HasField("ServiceTime") && !record.IsDBNull("ServiceTime")) {
                                                @record.GetDateTime("ServiceTime").ToShortDateString()
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                    </div>
                }
            }
        </div>)
    }


    @helper getaffecting(int id){ // This is used when showing a person. You send in a person id and then it shows the people affecting them... meaning, coming into their church.
        
        @BRT.Lister(tableId: "Contacts", viewId: "AppointmentToolPeople",
        condition: "<Eq FieldId=\"Id\" Value=\"" + id + "\"/>",
        savedFilters: new[] {"AllPeople", "PendingAppointmentsIntoCurrent"},
        fields: new[] {"Appointments.Church.Name","Appointments.StartDate","Appointments.EndDate","Appointments.Church.PendingAppointments.AppointmentStatus","Appointments.Church.PendingAppointments.AppointmentPosition","Appointments.Church.PendingAppointments.StartDate","Appointments.Church.PendingAppointments.People.FirstName","Appointments.Church.PendingAppointments.People.PreferredName","Appointments.Church.PendingAppointments.People.LastName"},
        template:
        @<div>
            @if (item.Count > 0) {
                <div class="mb-3 bg-warning bg-opacity-10 p-2">
                    <h5>Affecting appointments coming into their church</h5>
                        @foreach (EngineRecord record in item) {
                            <div>
                                @* Appointments / Lay Supply *@
                                <div>
                                    @if (!record.IsDBNull("Appointments")) {
                                        foreach (EngineRecord record_appointments in record.GetRecordList("Appointments")) {
                                            
                                            @* Church (appt tool) *@
                                            if (!record_appointments.IsDBNull("Church") && (record_appointments.IsDBNull("StartDate") || record_appointments.GetDateTime("StartDate") < DateTime.Now) && (record_appointments.IsDBNull("EndDate") || record_appointments.GetDateTime("EndDate") >= DateTime.Now)) {
                                                <div>
                                                    @foreach (EngineRecord record_appointments_church in record_appointments.GetRecordList("Church")) {
                                                        <div>
                                                        <span>
                                                            <a _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                                hx-get="@BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record_appointments_church.Id)" hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                            >
                                                                @record_appointments_church["Name"]
                                                            </a>
                                                            </span> <span> has incoming<i class="bi bi-arrow-right"></i></span>
                                                        <span>
                                                            @* Incoming Projected Appointments *@
                                                            @if (!record_appointments_church.IsDBNull("PendingAppointments")) {
                                                                <span>
                                                                    @foreach (EngineRecord record_appointments_church_pendingappointments in record_appointments_church.GetRecordList("PendingAppointments")) {
                                                                        <div>
                                                                        <a  
                                                                        hx-get="@BRT.SecureUrl("/at2ajax?action=pendingdataform&formorpersonid=form&id=" + record_appointments_church_pendingappointments.Id)" 
                                                                        hx-target="#snapbody" hx-indicator="#modalindicator" href="#" 
                                                                        class="text-muted editlink"><i class="bi bi-pencil-square"></i>
                                                                        </a>
                                                                        <span>
                                                                           
            
                                                                            @* Appointment Position *@
                                                                            @if (!record_appointments_church_pendingappointments.IsDBNull("AppointmentPosition")) {
                                                                                <span>
                                                                                    @foreach (CategoryFieldItem cat in record_appointments_church_pendingappointments.GetCategory("AppointmentPosition")) {
                                                                                        <span>
                                                                                            @cat.Label
                                                                                        </span>
                                                                                    }
                                                                                </span>
                                                                            }
            
                                                                            @* Start *@
                                                                            @if (!record_appointments_church_pendingappointments.IsDBNull("StartDate")) {
                                                                                <span>
                                                                                    @record_appointments_church_pendingappointments.GetDateTime("StartDate").ToShortDateString()
                                                                                </span>
                                                                            }
            
                                                                            @* People *@
                                                                            @if (!record_appointments_church_pendingappointments.IsDBNull("People")) {
                                                                                <span>
                                                                                    @foreach (EngineRecord record_appointments_church_pendingappointments_people in record_appointments_church_pendingappointments.GetRecordList("People")) {
                                                                                        <a _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                                                            hx-get="@BRT.SecureUrl("/at2ajax?action=getperson&id=" + record_appointments_church_pendingappointments_people.Id)" hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                                                        >
                                                                                            
                                                                                            @if (!record_appointments_church_pendingappointments_people.IsDBNull("PreferredName")) {
                                                                                                <span>
                                                                                                    @record_appointments_church_pendingappointments_people["PreferredName"]
                                                                                                </span>
                                                                                            }
                                                                                            else if (!record_appointments_church_pendingappointments_people.IsDBNull("FirstName")) {
                                                                                                <span>
                                                                                                    @record_appointments_church_pendingappointments_people["FirstName"]
                                                                                                </span>
                                                                                            }
            
                                                                                            
            
                                                                                            @* Last Name *@
                                                                                            @if (!record_appointments_church_pendingappointments_people.IsDBNull("LastName")) {
                                                                                                <span>
                                                                                                    @record_appointments_church_pendingappointments_people["LastName"]
                                                                                                </span>
                                                                                            }
                                                                                        </a>
                                                                                }
                                                                                </span>
                                                                            }
                                                                        </span>
                                                                        </div>
                                                                    }
                                                                </span>
                                                            }
                                                        </span>
                                                        </div>
                                                        
                                                    }
                                                </div>
                                            }
                                        }
                                    }
                                </div>
                            </div>
                        }
                        
                </div>
            }
        
        </div>
        )
    
    }

    @helper getProjectedAppts(int id, string churchorperson = "church"){ // for use on getperson() and getchurch()
    
        string cond = "";
        string label = "";
        string tdstyle = "mb-3 bg-success bg-opacity-10 p-2";
        
        if(churchorperson == "church"){
            <!--<p>church</p>-->
            cond = "<Eq Scope=\"Both\" FieldId=\"Church.Id\" Value=\"" + id + "\"/>";
            label = "Incoming Appointments";
            tdstyle = "mb-3 bg-warning bg-opacity-10 p-2";
        } else if(churchorperson == "person"){
            <!--<p>person</p>-->
            cond = "<Eq Scope=\"Both\" FieldId=\"People.Id\" Value=\"" + id + "\"/>";
            label = "Projected Appointments";
            tdstyle = "mb-3 bg-success bg-opacity-10 p-2";
        } else if(churchorperson == null){
            <!--<p>blank</p>-->
        }
        
        @*
        <!--=================================-->
        <!--PROJECTED APPOINTMENTS-->
        <!--=================================-->
        *@
        
        @BRT.Lister(tableId: "Content", viewId: "AppointmentToolPendingAppointments",
        condition: cond,
        //savedFilters: new[] {"Current"},
        fields: new[] {"People.FirstName","People.PreferredName","People.LastName","People.ClergyStatus",
        "AppointmentPosition","StartDate","EndDate","ServiceTime",
        "Church.Name","ExtensionMinistryPositions","ExtensionMinistryList.Name","ExtensionMinistry","District.Name"},
        template:
        @<text>
            @if (item.Count > 0) {
                <div class="@tdstyle">
                    <h5>@label</h5>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered bg-white mb-0">
                            <tr class="bg-light">
                                <th></th>
                                <th>
                                    @if(churchorperson == "person"){
                                        <span>To be appointed to</span>
                                    } else if(churchorperson == "church"){
                                        <span>Clergy to be appointed</span>
                                    }
                                </th>
                                <th>Clergy Status</th>
                                <th>Position</th>
                                <th>Start Date</th>
                            </tr>
                            @foreach (EngineRecord record in item) {
                                <tr>
                                    <td>
                                        <a 
                                        hx-get="@BRT.SecureUrl("/at2ajax?action=pendingdataform&formorpersonid=form&id=" + record.Id)" 
                                        hx-target="#snapbody" hx-indicator="#modalindicator" href="#" 
                                        class="text-muted editlink">
                                            <i class="bi bi-pencil-square"></i>
                                        </a>
                                    </td>
                                    <td>
                                        @if(churchorperson == "person"){
                                            if (record.HasField("Church") && !record.IsDBNull("Church") && record.GetRecordList("Church").Count > 0) {
                                                if(!record.GetRecordList("Church")[0].IsDBNull("Name")){
                                                    <div>
                                                        <a _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                            hx-get="@BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record.GetRecordList("Church")[0].Id)" hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                        >
                                                            @record.GetRecordList("Church")[0]["Name"]
                                                        </a>
                                                    </div>
                                                }
                                            }  
                                            if (record.HasField("ExtensionMinistryPositions") && !record.IsDBNull("ExtensionMinistryPositions")) {
                                                <div>@record.GetFirstCategoryLabel("ExtensionMinistryPositions")</div>
                                            }
                                            if(record.HasField("District") && !record.IsDBNull("District") && record.GetRecordList("District").Count > 0){
                                                <div>@record.GetRecordList("District")[0].GetString("Name")</div>
                                            } 
                                            if (record.HasField("ExtensionMinistryList") && !record.IsDBNull("ExtensionMinistryList") && record.GetRecordList("ExtensionMinistryList").Count > 0){
                                                <div>@record.GetRecordList("ExtensionMinistryList")[0].GetString("Name")</div>
                                            } 
                                            if(record.HasField("ExtensionMinistry") && !record.IsDBNull("ExtensionMinistry")){
                                                <div>@record["ExtensionMinistry"]</div>
                                            }
                                        } else if (churchorperson == "church"){
                                            if (record.HasField("People") && !record.IsDBNull("People") && record.GetRecordList("People").Count > 0) {
                                                foreach (EngineRecord record_people in record.GetRecordList("People")) {
                                                    <a _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                        hx-get="@BRT.SecureUrl("/at2ajax?action=getperson&id=" + record_people.Id)" hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                    >
                                                        @if (record_people.HasField("PreferredName") && !record_people.IsDBNull("PreferredName")) {
                                                            <span>@record_people["PreferredName"]</span>
                                                        } else if (record_people.HasField("FirstName") && !record_people.IsDBNull("FirstName")) {
                                                            <span>@record_people["FirstName"]</span>
                                                        }
                                                        @if (record_people.HasField("LastName") && !record_people.IsDBNull("LastName")) {
                                                            <span>@record_people["LastName"]</span>
                                                        }
                                                    </a>
                                                }
                                            }
                                        }
                                    </td>
                                    <td>
                                        @if (record.HasField("People") && !record.IsDBNull("People") && record.GetRecordList("People").Count > 0) {
                                            foreach (EngineRecord record_people in record.GetRecordList("People")) {
                                                if (record_people.HasField("ClergyStatus") && !record_people.IsDBNull("ClergyStatus")) {
                                                    foreach (CategoryFieldItem cat in record_people.GetCategory("ClergyStatus")) {
                                                        <span>@cat.Abbrev</span>
                                                    }
                                                }
                                            }
                                        }
                                    </td>
                                    <td>
                                        @if (record.HasField("AppointmentPosition") && !record.IsDBNull("AppointmentPosition")) {
                                            foreach (CategoryFieldItem cat in record.GetCategory("AppointmentPosition")) {
                                                @cat.Label
                                            }
                                        }
                                    </td>
                                    <td>
                                        @if (record.HasField("StartDate") && !record.IsDBNull("StartDate")) {
                                            @record.GetDateTime("StartDate").ToShortDateString()
                                        }
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>
            }
        </text>)
    }
    
    
    @helper getSalary(int id, string churchorperson = "church"){ // called from within getperson() or getchurch()
        
        string cond = "";
        
        if(churchorperson == "church"){
            <!--<p>church</p>-->
            cond = "<And><Eq Scope=\"Both\" FieldId=\"Church.Id\" Value=\"" + id + "\"/><Lt FieldId=\"PubDate\" When=\"now\" /><Or><Gt FieldId=\"EndDate\" When=\"now\" /><IsNull FieldId=\"EndDate\" /></Or></And>";
        } else if(churchorperson == "person"){
            <!--<p>person</p>-->
            cond = "<And><Eq Scope=\"Both\" FieldId=\"People.Id\" Value=\"" + id + "\"/><Lt FieldId=\"PubDate\" When=\"now\" /><Or><Gt FieldId=\"EndDate\" When=\"now\" /><IsNull FieldId=\"EndDate\" /></Or></And>";
        } else if(churchorperson == null){
            <!--<p>blank</p>-->
        }
    
        @BRT.Lister(tableId: "Content", viewId: "Salary",
        condition: cond,
        fields: new[] {"PubDate","EndDate","People.FirstName","People.PreferredName","People.LastName","BaseSalary","HousingAllowance","UtilityExclusion","AccountableReimbursement","CompensationTags","OtherCompensationTags","Church.Name"},
        template:
        @<div>
            @if (item.Count > 0) {
                <h5>Compensation</h5>
                <div class="table-responsive">
                    <table class="table table-sm table-bordered">
                        <tr class="bg-light">
                            <th>Start</th>
                            <th>End</th>
                            <th>
                                @if(churchorperson == "person"){
                                    <span>Church</span>
                                } else if(churchorperson == "person"){
                                    <span>Clergy</span>
                                }
                            </th>
                            <th>Base</th>
                            <th>Hou Allow</th>
                            @if(churchorperson == "person"){
                                <th>Salary + HA</th>
                            }
                            <th>Util Exc</th>
                            <th>Accou Reimb</th>
                            @if(churchorperson == "person"){
                                <th>Salary + AR</th>
                            }
                            <th>Hou</th>
                            @if(churchorperson == "person"){
                                <th>Salary + HA + AR</th>
                            }
                            @if(churchorperson == "person"){
                                <th>Other Comp Tags</th>
                            }
                        </tr>
                        @foreach (EngineRecord record in item) {
                            <tr>
                                <td>
                                    @if (record.HasField("PubDate") && !record.IsDBNull("PubDate")) {
                                        @record.GetDateTime("PubDate").ToShortDateString()
                                    }
                                </td>
                                <td>
                                    @if (record.HasField("EndDate") && !record.IsDBNull("EndDate")) {
                                        @record.GetDateTime("EndDate").ToShortDateString()
                                    }
                                </td>
                                <td>
                                    @if(churchorperson == "person"){
                                        if (record.HasField("Church") && !record.IsDBNull("Church")) {
                                            foreach (EngineRecord record_church in record.GetRecordList("Church")) {
                                                if (!record_church.IsDBNull("Name")) {
                                                    <a _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                        hx-get="@BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record_church.Id)" hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                    >
                                                        @record_church["Name"]
                                                    </a>
                                                }
                                            }
                                        }
                                    } else if (churchorperson == "church"){
                                        if (record.HasField("People") && !record.IsDBNull("People") && record.GetRecordList("People").Count > 0) {
                                            foreach (EngineRecord record_people in record.GetRecordList("People")) {
                                                <a _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                    hx-get="@BRT.SecureUrl("/at2ajax?action=getperson&id=" + record_people.Id)" hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                >
                                                    @if (record_people.HasField("PreferredName") && !record_people.IsDBNull("PreferredName")) {
                                                        <span>@record_people["PreferredName"]</span>
                                                    } else if (record_people.HasField("FirstName") && !record_people.IsDBNull("FirstName")) {
                                                        <span>@record_people["FirstName"]</span>
                                                    }
                                                    @if (record_people.HasField("LastName") && !record_people.IsDBNull("LastName")) {
                                                        <span>@record_people["LastName"]</span>
                                                    }
                                                </a>
                                            }
                                        }
                                    }
                                </td>
                                <td>
                                    @if (record.HasField("BaseSalary") && !record.IsDBNull("BaseSalary")) {
                                        @record.GetDouble("BaseSalary").ToString("c0")
                                    }
                                </td>
                                <td>
                                    @if (record.HasField("HousingAllowance") && !record.IsDBNull("HousingAllowance")) {
                                        @record.GetDouble("HousingAllowance").ToString("c0")
                                    }
                                </td>
                                @if(churchorperson == "person"){
                                    <td>
                                        @if (record.HasField("BaseSalary") && record.HasField("HousingAllowance")) {
                                            double amt = record.GetDouble("BaseSalary") + record.GetDouble("HousingAllowance");
                                            <span>@amt.ToString("c0")</span>
                                        }
                                    </td>
                                }
                                <td>
                                    @if (record.HasField("UtilityExclusion") && !record.IsDBNull("UtilityExclusion")) {
                                        @record.GetDouble("UtilityExclusion").ToString("c0")
                                    }
                                </td>
                                <td>
                                    @if (record.HasField("AccountableReimbursement") && !record.IsDBNull("AccountableReimbursement")) {
                                        @record.GetDouble("AccountableReimbursement").ToString("c0")
                                    }
                                </td>
                                @if(churchorperson == "person"){
                                    <td>
                                        @if (record.HasField("BaseSalary") && record.HasField("AccountableReimbursement")) {
                                            double amt = record.GetDouble("BaseSalary") + record.GetDouble("AccountableReimbursement");
                                            <span>@amt.ToString("c0")</span>
                                        }
                                    </td>
                                }
                                <td>
                                    @if (record.HasField("CompensationTags") && !record.IsDBNull("CompensationTags")) {
                                        foreach (CategoryFieldItem cat in record.GetCategory("CompensationTags")) {
                                            @cat.Label
                                        }
                                    }
                                </td>
                                @if(churchorperson == "person"){
                                    <td>
                                        @if (record.HasField("BaseSalary") && record.HasField("HousingAllowance")  && record.HasField("AccountableReimbursement")) {
                                            double amt = record.GetDouble("BaseSalary") + record.GetDouble("HousingAllowance") + record.GetDouble("AccountableReimbursement");
                                            <span>@amt.ToString("c0")</span>
                                        }
                                    </td>
                                }
                                @if(churchorperson == "person"){
                                    <td>
                                        @if (record.HasField("OtherCompensationTags") && !record.IsDBNull("OtherCompensationTags")) {
                                            @record.GetDouble("OtherCompensationTags").ToString("c0")
                                        }
                                    </td>
                                }
                            </tr>
                        }
                    </table>
                </div>
            }
        </div>)
    }
    
   
    

    @helper getMetrics(int id, string churchorperson = "church"){ // called from I think only a church
        
        string cond = "";
        
        if(churchorperson == "church"){
            <!--<p>church</p>-->
            cond = "<Eq Scope=\"Both\" FieldId=\"Church.Id\" Value=\"" + id + "\"/>";
        } else if(churchorperson == "person"){
            <!--<p>person</p>-->
            cond = "<Eq Scope=\"Both\" FieldId=\"People.Id\" Value=\"" + id + "\"/>";
        } else if(churchorperson == null){
            <!--<p>blank</p>-->
        }

        @BRT.Lister(tableId: "Content", viewId: "ChurchPerformanceMetrics",
        condition: cond,
        fields: new[] {"Church.Name","EffectiveYear","AvgWorship","OnlineWorshipAttendance","BeginningMembership","Membership","MembershipGainLoss",
        "SundaySchoolAttendance","ProfessionsOfFaith","ApportionmentAmt","PercentApportionmentsPaid","ApportionmentsPaid"},
        template:
        @<div>
            @if (item.Count > 0) {
                double totalPercentPaid = 0;
                int numberPercentPaid = 0;
                <h5>Apportionments <small id="avgpercentpaid" class="ms-2 bg-primary bg-opacity-10"></small></h5>
                <div>
                    <div class="table-responsive">
                    <table class="table table-sm table-bordered">
                        <tr class="bg-light">
                            @if(churchorperson == "person"){
                                <th>Church</th>
                            }
                            <th>Year</th>
                            <th>Appt</th>
                            <th>$ Paid</th>
                            <th>Paid %</th>
                            <th>$ Due</th>
                        </tr>
                        @foreach (EngineRecord record in item) {
                            if (record.HasField("EffectiveYear") && !record.IsDBNull("EffectiveYear")) {
                                <tr>
                                    @if(churchorperson == "person"){
                                        <td>
                                            @if (record.HasField("Church") && !record.IsDBNull("Church")) {
                                                if (!record.GetRecordList("Church")[0].IsDBNull("Name")) {
                                                    <a _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                        hx-get="@BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record.GetRecordList("Church")[0].Id)" hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                    >
                                                        @record.GetRecordList("Church")[0]["Name"]
                                                    </a>
                                                }
                                            }
                                        </td>
                                    }
                                    <td>
                                        @record["EffectiveYear"]
                                    </td>
                                    <td>
                                        @if (record.HasField("ApportionmentAmt") && !record.IsDBNull("ApportionmentAmt")) {
                                            @record.GetDouble("ApportionmentAmt").ToString("c0")
                                        } else {
                                            <span>n</span>
                                        }
                                    </td>
                                    <td>
                                        @if ( record.HasField("ApportionmentsPaid") && !record.IsDBNull("ApportionmentsPaid")) {
                                            @record.GetDouble("ApportionmentsPaid").ToString("c0")
                                        } else {
                                            <span></span>
                                        }
                                    </td>
                                    <td>
                                        @if (record.HasField("PercentApportionmentsPaid") && !record.IsDBNull("PercentApportionmentsPaid")) {
                                            totalPercentPaid = totalPercentPaid + record.GetDouble("PercentApportionmentsPaid");
                                            numberPercentPaid += 1;
                                            <span>@record.GetDouble("PercentApportionmentsPaid").ToString("0")%</span>
                                        } 
                                        else {
                                            <span></span>
                                        }
                                    </td>
                                    <td>
                                        @if (record.HasField("ApportionmentAmt") && record.HasField("ApportionmentsPaid") && !record.IsDBNull("ApportionmentAmt") && !record.IsDBNull("ApportionmentsPaid")) {
                                            double amtpaid = record.GetDouble("ApportionmentAmt") - record.GetDouble("ApportionmentsPaid");
                                            <span>@amtpaid.ToString("c0")</span>
                                        } else {
                                            <span></span>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                    
                    @if(numberPercentPaid>0){
                        @BRT.Raw("<span _=\"on load put 'avg paid % for all years=" + (totalPercentPaid/numberPercentPaid).ToString("0") + "' into #avgpercentpaid\"></span>")
                    }
                    
                    
                </div>
                </div>
                <h5 class="mt-2">Metrics</h5>
                <div>
                <div class="table-responsive">
                    <table class="table table-sm table-bordered">
                        <tr class="bg-light">
                            @if(churchorperson == "person"){
                                <th>Church</th>
                            }
                            <th>Year</th>
                            <th>Begin Mem</th>
                            <th>Memship</th>
                            <th>POFs</th>
                            <th>+- Members</th>
                            <th>Avg worship</th>
                            <th>Avg online</th>
                        </tr>
                        @foreach (EngineRecord record in item) {
                            if (record.HasField("EffectiveYear") && !record.IsDBNull("EffectiveYear")) {
                                <tr>
                                    @if(churchorperson == "person"){
                                        if (record.HasField("Church") && !record.IsDBNull("Church")) {
                                            if (!record.GetRecordList("Church")[0].IsDBNull("Name")) {
                                                <td>
                                                    <a _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                        hx-get="@BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record.GetRecordList("Church")[0].Id)" hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                    >
                                                        HITHERE @record.GetRecordList("Church")[0]["Name"]
                                                    </a>
                                                </td>
                                            }
                                        }
                                    }
                                    <td>
                                        @record["EffectiveYear"]
                                    </td>
                                    <td>
                                        @if (record.HasField("BeginningMembership") && !record.IsDBNull("BeginningMembership")) {
                                            @record["BeginningMembership"]
                                        } else {
                                            <span></span>
                                        }
                                    </td>
                                    <td>
                                        @if (record.HasField("Membership") && !record.IsDBNull("Membership")) {
                                            @record["Membership"]
                                        } else {
                                            <span></span>
                                        }
                                    </td>
                                    <td>
                                        @if (record.HasField("ProfessionsOfFaith") && !record.IsDBNull("ProfessionsOfFaith")) {
                                            @record["ProfessionsOfFaith"]
                                        } else {
                                            <span></span>
                                        }
                                    </td>
                                    <td>
                                        @if (record.HasField("MembershipGainLoss") && !record.IsDBNull("MembershipGainLoss")) {
                                            @record["MembershipGainLoss"]
                                        } else {
                                            <span></span>
                                        }
                                    </td>
                                    <td>
                                        @if (record.HasField("AvgWorship") && !record.IsDBNull("AvgWorship")) {
                                            @record["AvgWorship"]
                                        } else {
                                            <span></span>
                                        }
                                    </td>
                                    <td>
                                        @if (record.HasField("OnlineWorshipAttendance") && !record.IsDBNull("OnlineWorshipAttendance")) {
                                            @record["OnlineWorshipAttendance"]
                                        } else {
                                            <span></span>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </div>
                </div>
            }
        </div>)
    }
    
    
    @helper getMetricsPerson(int id){ // Yeah, this is only for people

        @BRT.Lister(tableId: "Content", viewId: "ChurchPerformanceMetrics",
        condition: "<Eq Scope=\"Both\" FieldId=\"Church.Appointments.People.Id\" Value=\"" + id + "\"/>",
        fields: new[] {"Church.Name","EffectiveYear","AvgWorship","OnlineWorshipAttendance","BeginningMembership","Membership","MembershipGainLoss",
        "SundaySchoolAttendance","ProfessionsOfFaith","ApportionmentAmt","PercentApportionmentsPaid","ApportionmentsPaid",
        "Church.Appointments.StartDate","Church.Appointments.EndDate","Church.Appointments.People.FirstName","Church.Appointments.People.LastName"},
        template:
        @<div>
            @if (item.Count > 0) {
                var churchList = new System.Collections.Generic.List<EngineRecord>();
                var yearList = new System.Collections.Generic.List<int>();
                
                foreach (EngineRecord record in item) {
                    if (record.HasField("Church") && !record.IsDBNull("Church") && record.GetRecordList("Church").Count > 0) {
                        if(!churchList.Contains(record.GetRecordList("Church")[0])){
                            churchList.Add(record.GetRecordList("Church")[0]);
                        }
                    }
                }
                if(churchList.Count > 0){
                    foreach(EngineRecord church in churchList){
                        if(church.HasField("Name") && !church.IsDBNull("Name")){
                            <!--<p>@church["Name"]</p>-->
                        }
                        if(church.HasField("Appointments") && !church.IsDBNull("Appointments") && church.GetRecordList("Appointments").Count > 0) {
                            <!--<p>has appts</p>-->
                            int count = 0;
                            foreach(EngineRecord appt in church.GetRecordList("Appointments")){
                                count++;
                                <!--<p>@count</p>-->
                                if (appt.HasField("People") && !appt.IsDBNull("People") && appt.GetRecordList("People").Count > 0) {
                                    <!--<p>has ppl</p>-->
                                    foreach(EngineRecord person in appt.GetRecordList("People")){
                                        <!--<p>@person["FirstName"]</p>-->
                                        if(person.Id == id){
                                            int apptStartDate;
                                            int apptEndDate;
                                            bool openAppt = false;
                                            if (appt.HasField("StartDate") && !appt.IsDBNull("StartDate")) {
                                                apptStartDate = appt.GetDateTime("StartDate").Year;
                                                <!--<p>@apptStartDate</p>-->
                                                if (appt.HasField("EndDate") && !appt.IsDBNull("EndDate")) {
                                                    apptEndDate = appt.GetDateTime("EndDate").Year;
                                                    <!--<p>@apptEndDate</p>-->
                                                    foreach (EngineRecord record in item) {
                                                        if(record.HasField("EffectiveYear") && !record.IsDBNull("EffectiveYear")){
                                                            int effectiveYear = (int)record["EffectiveYear"];
                                                            if (effectiveYear >= apptStartDate && effectiveYear <= apptEndDate){
                                                                <!--<p>print effectiveYear metrics</p>-->
                                                                if(!yearList.Contains(effectiveYear)){
                                                                    yearList.Add(effectiveYear);
                                                                }
                                                            }  
                                                        }
                                                    }
                                                    <!--<p>ended appt</p>-->
                                                } else {
                                                    <!--<p>open appt</p>-->
                                                    int year = apptStartDate;
                                                    int today = DateTime.Today.Year;
                                                    while(year <= today){
                                                        if(!yearList.Contains(year)){
                                                            yearList.Add(year);
                                                        }
                                                        year++;
                                                    }
                                                }
                                            }
                                        } else {
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                foreach(int year in yearList){
                    <!--<p>@year</p>-->
                }
            
                if(yearList.Count > 0){
                    <h5>Apportionments</h5>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <tr class="bg-light">
                                <th>Church</th>
                                <th>Year</th>
                                <th>Appt</th>
                                <th>$ Paid</th>
                                <th>Paid %</th>
                                <th>$ Due</th>
                            </tr>
                            @foreach (EngineRecord record in item) {
                                if (record.HasField("EffectiveYear") && !record.IsDBNull("EffectiveYear") && yearList.Contains(record.GetInteger("EffectiveYear"))) {
                                    <tr>
                                        <td>
                                            @if (record.HasField("Church") && !record.IsDBNull("Church")) {
                                                if (!record.GetRecordList("Church")[0].IsDBNull("Name")) {
                                                    <a _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                        hx-get="@BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record.GetRecordList("Church")[0].Id)" hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                    >
                                                        @record.GetRecordList("Church")[0]["Name"]
                                                    </a>
                                                }
                                            }
                                        </td>
                                        <td>
                                            @record["EffectiveYear"]
                                        </td>
                                        <td>
                                            @if (record.HasField("ApportionmentAmt") && !record.IsDBNull("ApportionmentAmt")) {
                                                @record.GetDouble("ApportionmentAmt").ToString("c0")
                                            } else {
                                                <span></span>
                                            }
                                        </td>
                                        <td>
                                            @if ( record.HasField("ApportionmentsPaid") && !record.IsDBNull("ApportionmentsPaid")) {
                                                @record.GetDouble("ApportionmentsPaid").ToString("c0")
                                            } else {
                                                <span></span>
                                            }
                                        </td>
                                        <td>
                                            @if (record.HasField("PercentApportionmentsPaid") && !record.IsDBNull("PercentApportionmentsPaid")) {
                                                <span>@record.GetDouble("PercentApportionmentsPaid").ToString("0")%</span>
                                            } else {
                                                <span></span>
                                            }
                                        </td>
                                        <td>
                                            @if (record.HasField("ApportionmentAmt") && record.HasField("ApportionmentsPaid") && !record.IsDBNull("ApportionmentAmt") && !record.IsDBNull("ApportionmentsPaid")) {
                                                double amtpaid = record.GetDouble("ApportionmentAmt") - record.GetDouble("ApportionmentsPaid");
                                                <span>@amtpaid.ToString("c0")</span>
                                            } else {
                                                <span></span>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                    <h5>Metrics</h5>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <tr class="bg-light">
                                <th>Church</th>
                                <th>Year</th>
                                <th>Begin Mbrs</th>
                                <th>Mbrs</th>
                                <th>POF</th>
                                <th>+- Mbrs</th>
                                <th>Avg worship</th>
                                <th>Avg online</th>
                            </tr>
                            @foreach (EngineRecord record in item) {
                                if (record.HasField("EffectiveYear") && !record.IsDBNull("EffectiveYear")) {
                                    <tr>
                                        @if (record.HasField("Church") && !record.IsDBNull("Church")) {
                                            if (!record.GetRecordList("Church")[0].IsDBNull("Name")) {
                                                <td>
                                                    <a _="on click remove .d-none from #back then go to #modalhead smoothly" href="#" class="text-dark"
                                                        hx-get="@BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record.GetRecordList("Church")[0].Id)" hx-target="#modalmeat" hx-indicator="#modalindicator" 
                                                    >
                                                        @record.GetRecordList("Church")[0]["Name"]
                                                    </a>
                                                </td>
                                            }
                                        }
                                        <td>
                                            @record["EffectiveYear"]
                                        </td>
                                        <td>
                                            @if (record.HasField("BeginningMembership") && !record.IsDBNull("BeginningMembership")) {
                                                @record["BeginningMembership"]
                                            } else {
                                                <span></span>
                                            }
                                        </td>
                                        <td>
                                            @if (record.HasField("Membership") && !record.IsDBNull("Membership")) {
                                                @record["Membership"]
                                            } else {
                                                <span></span>
                                            }
                                        </td>
                                        <td>
                                            @if (record.HasField("ProfessionsOfFaith") && !record.IsDBNull("ProfessionsOfFaith")) {
                                                @record["ProfessionsOfFaith"]
                                            } else {
                                                <span></span>
                                            }
                                        </td>
                                        <td>
                                            @if (record.HasField("MembershipGainLoss") && !record.IsDBNull("MembershipGainLoss")) {
                                                @record["MembershipGainLoss"]
                                            } else {
                                                <span></span>
                                            }
                                        </td>
                                        <td>
                                            @if (record.HasField("AvgWorship") && !record.IsDBNull("AvgWorship")) {
                                                @record["AvgWorship"]
                                            } else {
                                                <span></span>
                                            }
                                        </td>
                                        <td>
                                            @if (record.HasField("OnlineWorshipAttendance") && !record.IsDBNull("OnlineWorshipAttendance")) {
                                                @record["OnlineWorshipAttendance"]
                                            } else {
                                                <span></span>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                }
            }
        </div>)
    }
    
    
    @helper getchurch(int id, string churchorperson = "church"){
        
            var adapter = EngineAdapter.Create("Contacts","AppointmentToolChurches");
            adapter.AddResultFields(new[] {"PrimaryImage","Name","District.Name","Parish.Name","Charge.Name","ParsonageTags","TheologicalPreferences","MembershipEngagement","ConfidentialNote","AppointmentToolFiles","Registrations.AccessKey","Registrations.RegisterDate","Registrations.EventName","GCFANumber"}); // the basic fields
            adapter.AddResultFields(new[] {"CompensationInfo","CompensationInfo.PubDate","CompensationInfo.EndDate"});
            adapter.AddResultFields(SalaryTotalFieldsFullyQualified("churches"));
            adapter.AddCondition("<Eq FieldId=\"Id\" Value=\"" + id + "\"/>");
            EngineRecordList item =  adapter.GetList(1,1,true);
            
                if (item.Count > 0) {
                    foreach (EngineRecord record in item) {
                        if (!record.IsDBNull("Name")) {
                            <h4 class="p-2 bg-white d-flex justify-content-between align-content-center border" id="modalhead">
                                @record["Name"]
                                <span style="font-size: 60% !important;">
                                    <a href="#" class="d-none btn btn-primary btn-sm" _="on click add .d-none to me" id="back" hx-get="@BRT.SecureUrl("/at2ajax?action=getchurch&id=" + Request.QueryString["id"])" 
                                    hx-target="#snapbody" hx-indicator="#modalindicator"><i class="bi bi-arrow-left"></i> Back
                                        @if (!record.IsDBNull("Name")) {
                                            <span>to @record["Name"]</span>
                                        }
                                    </a>
                                    <a href="https://@EngineCore.CustomerContext.Current.ShortName .brtapp.com/manage/contacts-appointmenttoolchurches#page=1,@id" 
                                        target="_blank" class="btn btn-outline-secondary btn-sm editlink">
                                        View 
                                        @if (!record.IsDBNull("Name")) {
                                            <span>@record["Name"]</span>
                                        }
                                        in the Console
                                    </a>
                                    <a title="go full screen" href="@BRT.SecureUrl("/at2ajax?action=print&ajaxurl=" + Base64Encode(Request.Url.ToString().Split('?')[1]))" target="_blank" class="btn btn btn-outline-secondary btn-sm">
                                        <i class="bi bi-arrows-fullscreen"></i>
                                    </a>
                                </span>
                            </h4>
                        }
                    
                        <div id="modalmeat" class="mt-3">
                            <div class="row mb-3">
                                <div class="col-12">
                                    <div class="row">
                                        @{string secondcolumn = "col-xl-12 ";}
                                        @if (record.HasField("PrimaryImage") && !record.IsDBNull("PrimaryImage") && record.GetFiles("PrimaryImage").Count==1) {
                                            secondcolumn = "col-xl-9 ";
                                            <div class="col-xl-3 col-12">
                                            @foreach (FileFieldItem file in record.GetFiles("PrimaryImage")) {
                                                <div>
                                                    @if (file.ContentType.StartsWith("image/")) {
                                                        <a href="@(file.Url)" target="_blank"><img src="@(file.Url)?width=246&height=246&mode=crop" class="p-2 border img-fluid rounded"/></a>
                                                    }
                                                </div>
                                            }
                                            </div>
                                        }
                                        
                                        <div class="@(secondcolumn + "col-12 table-responsive")">
                                            <table class="table table-bordered table-sm">
                                                @if (record.HasField("District") && !record.IsDBNull("District")) {
                                                    <tr>
                                                        <td>
                                                            <b>District</b>
                                                        </td>
                                                        <td>
                                                            @foreach (EngineRecord record_district in record.GetRecordList("District")) {
                                                                if (record_district.HasField("Name") && !record_district.IsDBNull("Name")) {
                                                                    @record_district["Name"]
                                                                }
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                                @if (record.HasField("Charge") && !record.IsDBNull("Charge")) {
                                                    <tr>
                                                        <td>
                                                            <b>Charge</b>
                                                        </td>
                                                        <td>
                                                            @foreach (EngineRecord record_charge in record.GetRecordList("Charge")) {
                                                                @* Charge Name *@
                                                                if (record_charge.HasField("Name") && !record_charge.IsDBNull("Name")) {
                                                                    @record_charge["Name"]
                                                                }
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                                @if(record.HasField("CompensationInfo") && !record.IsDBNull("CompensationInfo")) {
                                                    <tr>
                                                        <td>
                                                            <b>Comp for all</b>
                                                        </td>
                                                        <td>
                                                            
                                                            @BRT.Raw(GetTotalSalary(record.GetRecordList("CompensationInfo")))
                                                            
                                                        </td>
                                                    </tr>
                                                }
                                                
                                                @if (record.HasField("Parish") && !record.IsDBNull("Parish")) {
                                                    <tr>
                                                        <td>
                                                            <b>Parish</b>
                                                        </td>
                                                        <td>
                                                            @foreach (EngineRecord record_parish in record.GetRecordList("Parish")) {
                                                                if (record_parish.HasField("Name") && !record_parish.IsDBNull("Name")) {
                                                                    @record_parish["Name"]
                                                                }
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                                @if (record.HasField("ParsonageTags") && !record.IsDBNull("ParsonageTags")) {
                                                    <tr>
                                                        <td>
                                                            <b>Parsonage</b>
                                                        </td>
                                                        <td>
                                                            @foreach (CategoryFieldItem cat in record.GetCategory("ParsonageTags")) {
                                                                @cat.Label
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                                @if (record.HasField("TheologicalPreferences") && !record.IsDBNull("TheologicalPreferences")) {
                                                    <tr>
                                                        <td>
                                                            <b>Theological Preference</b>
                                                        </td>
                                                        <td>
                                                            @foreach (CategoryFieldItem cat in record.GetCategory("TheologicalPreferences")) {
                                                                @cat.Label
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                                @if (record.HasField("MembershipEngagement") && !record.IsDBNull("MembershipEngagement")) {
                                                    <tr>
                                                        <td>
                                                            <b>Membership Engagement</b>
                                                        </td>
                                                        <td>
                                                            @foreach (CategoryFieldItem cat in record.GetCategory("MembershipEngagement")) {
                                                                @cat.Label
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                                <tr>
                                                    <td colspan="2">
                                                        <a class="text-dark" href="http://www.umdata.org/ChurchProfile.aspx?ChurchID=@record["GCFANumber"]" target="_blank">View prior year stats in UMData.org</a>
                                                    </td>
                                                    
                                                </tr>
                                                @if(record.HasField("ConfidentialNote") && !record.IsDBNull("ConfidentialNote")){
                                                    <tr>
                                                        <td colspan="2">
                                                            <h5>Confidential Note</h5>
                                                            <div class="showcap">@BRT.Raw(record.GetString("ConfidentialNote"))</div>
                                                        </td>
                                                    </tr>
                                                }
                                            </table>
                                            @if (record.HasField("AppointmentToolFiles") && !record.IsDBNull("AppointmentToolFiles") && record.GetFiles("AppointmentToolFiles").Count > 0) {
                                                <h5>Files</h5>
                                                <table class="table table-sm table-bordered">
                                                    @foreach (FileFieldItem file in record.GetFiles("AppointmentToolFiles")) {
                                                        <tr>
                                                            <td>
                                                                @if(!String.IsNullOrEmpty(file.Title)){
                                                                    @file.Title
                                                                }else{
                                                                    @file.Filename
                                                                }
                                                                 @if(!String.IsNullOrEmpty(file.Description)){
                                                                    <span>@file.Description</span>
                                                                }
                                                            </td>
                                                            <td>
                                                                <a href="@file.Url" target="_blank" class="text-dark">Open File</a>
                                                            </td>
                                                        </tr>
                                                    }
                                                </table>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tabularcontent">
                                @getProjectedAppts(id, churchorperson)
                                @getAppts(id, churchorperson)
                                @getSalary(id, churchorperson)
                                @getMetrics(id, churchorperson)
                                
                                @if (record.HasField("Registrations") && !record.IsDBNull("Registrations") && record.GetRecordList("Registrations").Count > 0) {
                                    <h5 class="mt-2">Forms</h5>
                                    <div class=" table-responsive">
                                        <table class="table table-sm table-bordered">
                                            @foreach (EngineRecord reg in record.GetRecordList("Registrations")) {
                                                <tr>
                                                    <td>
                                                        @if (reg.HasField("RegisterDate") && !reg.IsDBNull("RegisterDate")) {
                                                            @reg.GetDateTime("RegisterDate").ToShortDateString()
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (reg.HasField("EventName") && !reg.IsDBNull("EventName")) {
                                                            <a class="text-dark" href="https://@EngineCore.CustomerContext.Current.ShortName -reg.brtapp.com/confirm/@reg.GetString("AccessKey")" target="_blank">
                                                                @reg["EventName"]
                                                            </a>
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        </table>
                                    </div>
                                }
                                @*<h5>Graphs from GCFA (if exists)</h5>*@
                                @getchurchfromgcfa(id)
                                
                            </div>
                        </div>
                    }@* END: foreach (EngineRecord record in item) *@
                }@* END: if (item.Count > 0) *@
            
        
    }



@helper pendingsimple(){ // all the projected appointments

<script>
    $(document).ready( function () {
    $('#datatable').dataTable( {
        "paging":         false,
        "info": false,
        "order": [[ 1, "desc" ]],
        dom: 'Bfrtip',
        buttons: [
            'csv', 'excel', 'print'
        ]
            
        } );
} );
</script>

    @BRT.Lister(tableId: "Content", viewId: "AppointmentToolPendingAppointments",
    pageSize:10000,
    fields: new[] {"People.FirstName","People.PreferredName","People.LastName","StartDate","AppointmentPosition","Church.Name","Church.District.Name","District.Name","ExtensionMinistry","AppointmentStatus","ServiceTime","OtherServicePercent","Notes","BaseSalary","CompensationTags","HousingAllowance","WhenUpdated"},
    template:
@<div>
    <div class="text-center mt-1">
        <a hx-get="@BRT.SecureUrl("/at2ajax?" + Request.Url.ToString().Split('?')[1])" 
    hx-target="#renderdiv" hx-indicator="#indicator" href="#" 
    class="btn btn btn-outline-secondary btn-sm">
        <i class="bi bi-arrow-clockwise"></i></a>
        @item.Count.ToString("N0") projected appointments <small class="text-muted">Showing most recently made first</small></div>
    
    @if (item.Count > 0) {
        
        
        <table class="cell-border mt-3" id="datatable">
            <thead>
                <tr>
                    <th></th>
                    <th>Updated</th>
                    <th>Person</th>
                    <th>Start</th>
                    <th>Position</th>
                    <th>Church</th>
                    <th>Dist (if so)</th>
                    <th>Ext Min</th>
                    <th>Status</th>
                    
                    <th>Time</th>
                    <th>Other time</th>
                    <th>Notes</th>
                    <th>Base sal</th>
                    <th>HOU</th>
                    <th>Allowance</th>
                    
                    
                </tr>
            </thead>
            <tbody>
            @foreach (EngineRecord record in item) {
                <tr>
                    <td>
                            
                            <a data-bs-toggle="offcanvas" data-bs-target="#snapshotmodal" 
                            hx-get="@BRT.SecureUrl("/at2ajax?action=pendingdataform&formorpersonid=form&id=" + record.Id)" 
                            hx-target="#snapbody" hx-indicator="#modalindicator" href="#" 
                            class="text-muted editlink">
                                                            
                            <i class="bi bi-pencil-square"></i></a></td>
                    <td data-sort="@if(!record.IsDBNull("WhenUpdated")){@record.GetDateTime("WhenUpdated").ToString("yyyy-MM-dd")}">
                        <small class="text-muted">@record["WhenUpdated"]</small>
                    </td>
                    
                    
                    @{string thisDataSort = "";} 
                    @if (!record.IsDBNull("People")) {
                        if (!record.GetRecordList("People")[0].IsDBNull(("LastName"))) {
                           thisDataSort = record.GetRecordList("People")[0].GetString("LastName"); 
                        }
                        if (!record.GetRecordList("People")[0].IsDBNull(("FirstName"))) {
                           thisDataSort += record.GetRecordList("People")[0].GetString("FirstName"); 
                        }
                    }
                    <td data-sort="@thisDataSort">
                        @if (!record.IsDBNull("People")) {
                            foreach (EngineRecord record_people in record.GetRecordList("People")) {
                                @BRT.Raw("<a data-bs-toggle=\"offcanvas\" data-bs-target=\"#snapshotmodal\" href=\"#\" hx-get=\"" + BRT.SecureUrl("/at2ajax?action=getperson&id=" + record_people.Id) +"\" hx-target=\"#snapbody\"  hx-indicator=\"#modalindicator\" class=\"me-1 text-dark\">")
                                if (!record_people.IsDBNull("PreferredName")) {
                                    <span>
                                        @record_people["PreferredName"]
                                    </span>
                                }
                                else if (!record_people.IsDBNull("FirstName")) {
                                    <span>
                                        @record_people["FirstName"]
                                    </span>
                                }

                                
                                if (!record_people.IsDBNull("LastName")) {
                                    <span>
                                        @record_people["LastName"]
                                    </span>
                                }
                                @BRT.Raw("</a>")
                            }
                        }
                    </td>

                    
                    <td data-sort="@if(!record.IsDBNull("StartDate")){@record.GetDateTime("StartDate").ToString("yyyy-MM-dd")}">
                        @if (!record.IsDBNull("StartDate")) {
                            @record.GetDateTime("StartDate").ToShortDateString()
                        }
                    </td>

                    
                    <td>
                        @if (!record.IsDBNull("AppointmentPosition")) {
                            foreach (CategoryFieldItem cat in record.GetCategory("AppointmentPosition")) {
                                <span>
                                    @cat.Label
                                </span>
                            }
                        }
                    </td>

                    
                    <td>
                        @if (!record.IsDBNull("Church")) {
                            foreach (EngineRecord record_church in record.GetRecordList("Church")) {
                                @BRT.Raw("<a data-bs-toggle=\"offcanvas\" data-bs-target=\"#snapshotmodal\" href=\"#\" hx-get=\"" + BRT.SecureUrl("/at2ajax?action=getchurch&id=" + record_church.Id) +"\" hx-target=\"#snapbody\"  hx-indicator=\"#modalindicator\" class=\"me-1 text-dark\">")
                                if (!record_church.IsDBNull("Name")) {
                                    <span>
                                        @record_church["Name"]
                                    </span>
                                }
                                
                                <span>
                                @if (!record_church.IsDBNull("District")) {
                                    <span>
                                        @foreach (EngineRecord record_church_district in record_church.GetRecordList("District")) {
                                            <span>
                                                
                                                @if (!record_church_district.IsDBNull("Name")) {
                                                    <span>
                                                        @record_church_district["Name"]
                                                    </span>
                                                }
                                            </span>
                                    }
                                    </span>
                                }
                                </span>
                                @BRT.Raw("</a>")
                            }
                        }
                    </td>

                    
                    <td>
                        @if (!record.IsDBNull("District")) {
                            foreach (EngineRecord record_district in record.GetRecordList("District")) {
                                
                                if (!record_district.IsDBNull("Name")) {
                                    <span>
                                        @record_district["Name"]
                                    </span>
                                }
                            }
                        }
                    </td>

                    @* Ext Ministry NAME *@
                    <td>
                        @if (!record.IsDBNull("ExtensionMinistry")) {
                            @record["ExtensionMinistry"]
                        }
                    </td>

                    @* Appointment Status *@
                    <td>
                        @if (!record.IsDBNull("AppointmentStatus")) {
                            foreach (CategoryFieldItem cat in record.GetCategory("AppointmentStatus")) {
                                <span>
                                    @cat.Label
                                </span>
                            }
                        }
                    </td>
                    
                    
                    
                    @* Service Time *@
                    <td>
                        @if (!record.IsDBNull("ServiceTime")) {
                            foreach (CategoryFieldItem cat in record.GetCategory("ServiceTime")) {
                                <div>
                                    @cat.Label
                                </div>
                            }
                        }
                    </td>

                    @* Other Service Time Percent *@
                    <td>
                        @if (!record.IsDBNull("OtherServicePercent")) {
                            @record["OtherServicePercent"]
                        }
                    </td>

                    @* Notes *@
                    <td>
                        @if (!record.IsDBNull("Notes")) {
                            @record["Notes"]
                        }
                    </td>

                    @* Base Salary *@
                    <td>
                        @if (!record.IsDBNull("BaseSalary")) {
                            @record["BaseSalary"]
                        }
                    </td>

                    @* Housing Tags *@
                    <td>
                        @if (!record.IsDBNull("CompensationTags")) {
                            foreach (CategoryFieldItem cat in record.GetCategory("CompensationTags")) {
                                <div>
                                    @cat.Label
                                </div>
                            }
                        }
                    </td>

                    @* Housing Allowance *@
                    <td>
                        @if (!record.IsDBNull("HousingAllowance")) {
                            @record["HousingAllowance"]
                        }
                    </td>
                    
                    
                    
                    
                    
                </tr>
            }
            </tbody>
        </table>
        }

    </div>)

}

@helper megapeople(string view="all", int id=0){ // Just playing around here. It's not that efficient
    
    var adapter = EngineAdapter.Create("Contacts","AppointmentToolPeople");
    adapter.AddResultFields(new[] {"FirstName"}); 
    if(id==0){
        switch(view) {
            case "needsmove": // anyone with a move status that means we need to move them BUT that hasn't been moved.
                adapter.AddSavedFilter("MoveNeedsMove");
                break;
            case "resolved": // people that were set to a move status that means they need to move and we moved them.
                adapter.AddSavedFilter("MoveBeenMoved");
                break;
            case "affectedunresolved": // people that have someone coming into their church but have yet to be moved.
                adapter.AddSavedFilter("UnresolvedAffected");
                break;
            case "affectedresolved": // got affected but now have either been moved or have a move status like "remain" or "appointment set" that mean, "they are all set'
                adapter.AddSavedFilter("ResolvedAffected");
                break;
            case "all": // thie INCLUDES retired people. It will be the longest list.
                adapter.AddSavedFilter("AllPeople");
                break;
            case "noretired": // This is the MAIN people list
                adapter.AddSavedFilter("AllPeopleNoRetired");
                break;
        }
    }
    else{ // we are looking for a specific person
    }
    EngineRecordList item =  adapter.GetList(1,5000,true);
    if(item.Count>0){ 
    <div class="container">
        
        <div>
            @*<div class="form-check form-check-inline" _="on click toggle the *display of .graph">
              <input class="form-check-input" type="checkbox" id="hidegraphs" value="option1">
              <label class="form-check-label" for="hidegraphs">hide graphs</label>
            </div>
            <div class="form-check form-check-inline">
              <input class="form-check-input" type="checkbox" id="hideappor" value="option2">
              <label class="form-check-label" for="hideappor">hide apportionments</label>
            </div>*@
            @{
                var da = EngineAdapter.Create("Contacts","Districts");
                da.AddResultFields(new[] {"Name"});
                da.AddSavedFilter("ExcludeInactive");
                EngineRecordList districts =  da.GetList(1,5000,true);
                if(districts.Count>0){
                    foreach (EngineRecord district in districts) {
                        if (!district.IsDBNull("Name")) {
                            <a href="#" class="ms-2">@district["Name"]</a>
                        }
                    }
                }
            }
        </div>
        
        <div  _="init hide .btn">
            @foreach(EngineRecord record in item) {
                <div class="p-3  bg-white mt-3 rounded border">
                    @getperson(Int32.Parse(record.Id.ToString()))
                </div>
            }
        </div>
    </div>
    }
    
}

@helper bulk(){

<div class="container">
    <div class="row justify-content-center">
        <div class="col-8">
            <div class="card card-body">
                <h2>Step 1: Make new and end old appointments</h2>
                <p>When you're DONE with the appointment-making process and ready to move them into the live database, you want to create new and end existing. <a href="https://fakeumc-www.brtsite.com/appointmenttool/appointments" target="_blank">Use the &quot;Create/End Appointments&quot; from the Appointment Tool 1</a> to do that</p>
                <div><iframe src="https://player.vimeo.com/video/677305860?h=576e29b1d1&amp;badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479" width="300" height="169" frameborder="0" allow="autoplay; fullscreen; picture-in-picture" allowfullscreen title="Bulk create/end projected"></iframe></div>
                <h2>Step 2: Clean up</h2>
                <p>There IS a way to bulk update statuses in the version 1 but you can just as easily make those updates in the console. You'll want to do this either at the end of this appointment-making process. OR WHAT MIGHT BE BETTER, is to leave them hanging around until BEFORE the next one. You'll want to</p>
                <div><iframe src="https://player.vimeo.com/video/677308118?h=5a92d698f8&amp;badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479" width="300" height="169" frameborder="0" allow="autoplay; fullscreen; picture-in-picture" allowfullscreen title="Deleting appointments and statuses"></iframe></div>
                <ul>
                    <li>Delete all the projected appointments. <br/><a href="https://@EngineCore.CustomerContext.Current.ShortName .brtapp.com/manage/content-appointmenttoolpendingappointments" target="_blank">Jump to Projected Appointments in the Console</a></li>
                    <li>Set everyone's move status back to what it should be. Either null or whatever status you want. <br/><a href="https://@EngineCore.CustomerContext.Current.ShortName .brtapp.com/manage/contacts-appointmenttoolpeople" target="_blank">Jump to Appointment Tool People in the Console</li>
                </ul>
            </div>
        </div>
    </div>
</div>

}


@functions
{
    
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public string[] SalaryTotalFields(){   // The fields the customer wants in order to calculate total salary
        if(!@Site.IsDBNull("AppointmentTool2SalaryFields")){
            return Site.GetString("AppointmentTool2SalaryFields").Split(',');
        }
        else{
            return new string[] {"BaseSalary","AccountableReimbursement","UtilityExclusion","EquitableComp"};
        }
    }
    
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public string[] SalaryTotalFieldsFullyQualified(string comingFrom){   // append the 'coming from field' to get within a list
        string fieldPrefix = "";// It could be Salary or Compensation depeding on church or people
        if(comingFrom=="people"){
            fieldPrefix = "Salary.";
        }
        else{
            fieldPrefix = "CompensationInfo.";
        }
        string[] salFields = SalaryTotalFields();
        for (int i = 0;i < salFields.Length; i++){
            salFields[i] = fieldPrefix + salFields[i];
        }
        return salFields;
    }
    
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
    public string GetTotalSalary(EngineRecordList salaries){ // you pass in an engine record list of salaries and we'll calculate the total for you based on default total fields or fields the conf has specified.
        bool isCurrentSalary = false;
        decimal TotalSalary  = 0;
        foreach(EngineRecord record_salary in salaries) {
            if(record_salary.HasField("EndDate") && !record_salary.IsDBNull("EndDate") && record_salary.GetDateTime("EndDate") > DateTime.Now) { // checking if it has an end date and if so is it in the future... Else...
                isCurrentSalary = true;
            }
            else if (record_salary.GetDateTime("PubDate") >= Convert.ToDateTime("01/01/" + DateTime.Now.Year.ToString()) && record_salary.GetDateTime("PubDate") <= Convert.ToDateTime("12/31/" + DateTime.Now.Year.ToString())){
                isCurrentSalary = true;
            }
            if(isCurrentSalary){
                foreach(string salaryField in SalaryTotalFields()){
                    if(record_salary.HasField(salaryField) && !record_salary.IsDBNull(salaryField)){
                        TotalSalary += Convert.ToDecimal(record_salary[salaryField]);
                    }
                }
            }
            isCurrentSalary = false;
        }
        
        return "<span at-salary=\"" + TotalSalary + "\">" + TotalSalary.ToString("C0") + "</span>";
    }
    
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
    public static string Base64Encode(string plainText) {
      var plainTextBytes = System.Text.Encoding.UTF8.GetBytes(plainText);
      return System.Convert.ToBase64String(plainTextBytes);
    }
    
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
    public static string Base64Decode(string base64EncodedData) {
      var base64EncodedBytes = System.Convert.FromBase64String(base64EncodedData);
      return System.Text.Encoding.UTF8.GetString(base64EncodedBytes);
    }
    
    public bool IsMultiConference(){
        if(EngineCore.CustomerContext.Current.ShortName == "gnw" || EngineCore.CustomerContext.Current.ShortName == "fakeumc"){
            return true;
        }
        else{
            return false; 
        }
    }
    
}












